const OS$LOAD = [],
    OS = { $Wrapper: null, $Toaster: null, $Selectors: { Datatable: "os-datatable", Dropdown: "os-dropdown", Password: "os-password", Fixedbar: "os-fixedbar", Wrapper: "os-wrapper", Toaster: "os-toaster", Sidebar: "os-sidebar", Switch: "os-switch", Select: "os-select", Option: "os-option", Filter: "os-filter", Filler: "os-filler", Button: "os-button", Topbar: "os-topbar", Group: "os-group", Toast: "os-toast", Modal: "os-modal", Text: "os-text", Area: "os-area", Date: "os-date", Time: "os-time" }, $Locales: { en: { Print: "Print", Search: "Search", Columns: "Columns", Download: "Download", Months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], Days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"] }, ar: { Print: "طباعة", Search: "بحث", Columns: "أعمدة", Download: "تحميل", Months: ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"], Days: ["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت"] }, fr: { Print: "Imprimer", Search: "Recherche", Columns: "Colonnes", Download: "Telecharger", Months: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"], Days: ["Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi"] } }, $Load: function(e) { "function" == typeof e && OS$LOAD.push(e) } };
(function() { const THEME = { COLORS: { BLACK: "0 0 0", WHITE: "255 255 255", RED: { 50: "254 242 242", 100: "254 226 226", 200: "254 202 202", 300: "252 165 165", 400: "248 113 113", 500: "239 68 68", 600: "220 38 38", 700: "185 28 28", 800: "153 27 27", 900: "127 29 29", 950: "69 10 10" }, GRAY: { 50: "249 250 251", 100: "243 244 246", 200: "229 231 235", 300: "209 213 219", 400: "156 163 175", 500: "107 114 128", 600: "75 85 99", 700: "55 65 81", 800: "31 41 55", 900: "17 24 39", 950: "3 7 18" }, BLUE: { 50: "239 246 255", 100: "219 234 254", 200: "191 219 254", 300: "147 197 253", 400: "96 165 250", 500: "59 130 246", 600: "37 99 235", 700: "29 78 216", 800: "30 64 175", 900: "30 58 138", 950: "23 37 84" }, GREEN: { 50: "240 253 244", 100: "220 252 231", 200: "187 247 208", 300: "134 239 172", 400: "74 222 128", 500: "34 197 94", 600: "22 163 74", 700: "21 128 61", 800: "22 101 52", 900: "20 83 45", 950: "5 46 22" }, YELLOW: { 50: "254 252 232", 100: "254 249 195", 200: "254 240 138", 300: "253 224 71", 400: "250 204 21", 500: "234 179 8", 600: "202 138 4", 700: "161 98 7", 800: "133 77 14", 900: "113 63 18", 950: "66 32 6" }, PURPLE: { 50: "250 245 255", 100: "243 232 255", 200: "233 213 255", 300: "216 180 254", 400: "192 132 252", 500: "168 85 247", 600: "147 51 234", 700: "126 34 206", 800: "107 33 168", 900: "88 28 135", 950: "59 7 100" } }, FONTS: { SIZES: { XSMALL: "0.75rem", SMALL: "0.875rem", BASE: "1rem", MEDIUM: "1.125rem", LARGE: "1.25rem", XLARGE: "1.5rem" }, LINES: { XSMALL: "1rem", SMALL: "1.25rem", BASE: "1.5rem", MEDIUM: "1.75rem", LARGE: "1.75rem", XLARGE: "2rem" } } };

    function theme(e, t, n) { e = e.toUpperCase(), t = t.toUpperCase(), THEME[e][t] = n }

    function verify(e, ...t) { return t.includes(Object.prototype.toString.call(e).slice(8, -1).toLowerCase()) }

    function present(e) { return !(verify(e, "null") || verify(e, "undefined") || verify(e, "number") && isNaN(e) || verify(e, "string") && "" === e || verify(e, "array") && 0 === e.length || verify(e, "object") && 0 === Object.keys(e).length) }

    function kebabCase(e) { return verify(e, "string") && e.replace(/([a-z])([A-Z])/g, "$1-$2").split(/[-_.\\\/\s]/g).map((function(e, t) { return e.toLowerCase() })).join("-") || "" }

    function random(e = 10) { for (var t = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789", n = "", s = 0; s < e; s++) n += t.charAt(Math.floor(62 * Math.random())); return n }

    function falsy(e, t = []) { return ["false", "null", "undefined", "0", ...t].includes(String(e).trim()) }

    function truty(e, t = []) { return !["false", "null", "undefined", "0", ...t].includes(String(e).trim()) }

    function setter(e, t, n) { const s = kebabCase(e);
        n.includes(s) && (t ? this.getAttribute(s) !== String(t) && this.setAttribute(s, t) : this.removeAttribute(s)) }
    theme.colors = function(e, t, n) { e = e.toUpperCase(); const s = verify(THEME.COLORS[e], "object"); return "rgb(" + ((s ? THEME.COLORS[e][t] : THEME.COLORS[e]) || THEME.COLORS.BLACK) + " / " + ((s ? n : t) || 100) / 100 + ")" }, theme.fonts = {}, theme.fonts.sizes = function(e) { return e = e.toUpperCase(), THEME.FONTS.SIZES[e] }, theme.fonts.lines = function(e) { return e = e.toUpperCase(), THEME.FONTS.LINES[e] }, theme.layer = function() { return Math.max(...[...document.querySelectorAll("body *")].reduce(((e, t) => (e.push(t), "root" in t && e.push(...t.root.querySelectorAll("*")), e)), []).map((e => parseFloat(window.getComputedStyle(e).zIndex))).filter((e => !Number.isNaN(e))), 0) + 1 }, OS.$Theme = (e, t, n) => theme(e, t, n), OS.$Theme.Colors = theme.colors, OS.$Theme.Layer = theme.layer, OS.$Theme.Fonts = { Lines: theme.fonts.lines, Sizes: theme.fonts.sizes }, OS.$Theme.Update = function() { Object.values(OS.$Selectors).forEach((e => { Array.from(document.querySelectorAll(e), (e => e.render())) })) }, OS.$Builder = class Builder { static get TXT_TAGS() { return Symbol.for("text") }
        static get SVG_TAGS() { return { svg: !0, animate: !0, animateMotion: !0, animateTransform: !0, circle: !0, clipPath: !0, defs: !0, desc: !0, discard: !0, ellipse: !0, feBlend: !0, feColorMatrix: !0, feFiberTransfer: !0, feComposite: !0, feConvolveMatrix: !0, feDiffuseLighting: !0, feDisplacementMap: !0, feDistantLight: !0, feDropShadow: !0, feFlood: !0, feFuncA: !0, feFuncB: !0, feFuncG: !0, feFuncR: !0, feGaussianBlur: !0, feImage: !0, feMerge: !0, feMergeNode: !0, feMorphology: !0, feOffset: !0, fePointLight: !0, feSpecularLighting: !0, feSpotLight: !0, feTile: !0, feTurbulence: !0, filter: !0, foreignObject: !0, g: !0, hatch: !0, hatchpath: !0, image: !0, line: !0, linearGradient: !0, marker: !0, mask: !0, metadata: !0, mpath: !0, path: !0, pattern: !0, polygon: !0, polyline: !0, radialGradient: !0, rect: !0, script: !0, set: !0, stop: !0, style: !0, switch: !0, symbol: !0, text: !0, textPath: !0, title: !0, tspan: !0, use: !0, compiler: !0, animateColor: !0, "missing-glyph": !0, font: !0, "font-face": !0, "font-face-format": !0, "font-face-name": !0, "font-face-src": !0, "font-face-uri": !0, hkern: !0, vkern: !0, solidcolor: !0, altGlyph: !0, altGlyphDef: !0, altGlyphItem: !0, glyph: !0, glyphRef: !0, tref: !0, cursor: !0 } }
        static get CSS_TAGS() { return { "animation-iteration-count": !0, "border-image-slice": !0, "border-image-width": !0, "column-count": !0, "counter-increment": !0, "counter-reset": !0, flex: !0, "flex-grow": !0, "flex-shrink": !0, "font-size-adjust": !0, "font-weight": !0, "line-height": !0, "nav-index": !0, opacity: !0, order: !0, orphans: !0, "tab-size": !0, widows: !0, "z-index": !0, "pitch-range": !0, richness: !0, "speech-rate": !0, stress: !0, volume: !0, "lood-opacity": !0, "mask-box-outset": !0, "mask-border-outset": !0, "mask-box-width": !0, "mask-border-width": !0, "shape-image-threshold": !0 } }
        constructor(e, t, n = {}) { this.container = e, this.instance = null, this.refs = n, this.tree = t }
        flat(e) { return e.reduce(((e, t) => [...e, ...verify(t, "array") ? this.flat(t) : [t]]), []) }
        create(e) { const { type: t, props: n } = e, s = t === OS.$Builder.TXT_TAGS ? document.createTextNode("") : t in OS.$Builder.SVG_TAGS ? document.createElementNS("http://www.w3.org/2000/svg", t) : document.createElement(t), i = this.children({ dom: s }, e); return this.properties(s, {}, n), new OS.$Instance({ dom: s, fiber: e, children: i }) }
        reconcile(e, t, n) { var s; return null == t ? (verify(n, "array") ? (s = n.map((e => this.create(e)))).forEach((t => { e.appendChild(t.dom) })) : verify((s = this.create(n)).dom, "array") ? this.flat(s.dom).forEach((t => { e.appendChild(t) })) : s.dom && e.appendChild(s.dom), s) : null == n ? (verify(t, "array") ? t.forEach((t => { e.removeChild(t.dom) })) : t.dom && e.removeChild(t.dom), null) : verify(t, "array") && verify(n, "array") ? this.children({ dom: e, children: t }, { props: { children: n } }) : (t.fiber || {}).type !== n.type ? (s = this.create(n), (t.dom || t[0].dom) && e.replaceChild(s.dom, t.dom || t[0].dom), s) : verify(n.type, "string") || n.type === OS.$Builder.TXT_TAGS ? (t.children = this.children(t, n), this.properties(t.dom, t.fiber.props, n.props), t.fiber = n, t) : void 0 }
        children(e, t) { const n = (e.children || []).filter((e => null != e)),
                s = (t.props.children || []).filter((e => null != e)),
                i = Math.max(n.length, s.length),
                r = []; for (var o = 0; o < i; o++) { const t = this.reconcile(e.dom, n[o], s[o]);
                r.push(t) } return r }
        properties(e, t, n) { this.clearProperties(e, t, n), this.applyProperties(e, n) }
        clearProperties(e, t, n) { for (var s in this.clearListeners(e, n), t)
                if (!(s in n)) { const t = e && e.tagName && e.tagName.toLowerCase(),
                        n = s.split(".").length > 1,
                        i = t in OS.$Builder.SVG_TAGS;
                    s in e && !i ? e[s] = "" : n ? this.applyObject(e, {
                        [s]: "" }, s) : e.removeAttribute(s) } }
        clearListeners(e, t) { for (const n in e.listeners)
                if (!(n in t)) { const t = n.split(":")[0].substring(1);
                    e.removeEventListener(t, e.listeners[n], !1), delete e.listeners[n] } }
        applyProperties(e, t) { for (var n in t) "children" !== n && ("style" === n ? this.applyStyles(e, t, n) : this.otherwise(e, t, n)) }
        applyStyles(e, t, n) { if (verify(t[n], "object")) { const i = t[n]; for (const t in i) { const n = kebabCase(t); var s = i[t];
                    n.startsWith("--") ? document.documentElement.style.setProperty(n, s) : present(s) && (verify(s, "number") && !(n in OS.$Builder.CSS_TAGS) && (s += "px"), e.style[n] = s) } } else e.style = t[n] }
        otherwise(e, t, n) { const s = e && e.tagName && e.tagName.toLowerCase(),
                i = n.split(".").length > 1,
                r = s in OS.$Builder.SVG_TAGS,
                o = n.startsWith("@"),
                a = "ref" === n,
                l = n in e;
            o ? this.applyListeners(e, n, t[n]) : l && !r ? e[n] = t[n] : i ? this.applyObject(e, t, n) : a ? this.applyReferance(e, t, n) : e.setAttribute(n, t[n]) }
        applyObject(node, newProps, prop) { const code = prop.split(".").reduce(((e, t) => t.length ? e + `["${t}"]` : e), "");
            eval(`node${code} = newProps[prop]`) }
        applyReferance(e, t, n) { this.refs[t[n]] ? verify(this.refs[t[n]], "array") ? this.refs[t[n]].push(e) : this.refs[t[n]] = [this.refs[t[n]], e] : this.refs[t[n]] = e }
        applyListeners(e, t, n) { const s = t.split(":"),
                i = s.shift().substring(1);
            e.listeners = e.listeners || {}, e.listeners[t] && (!e.listeners[t] || e.listeners[t].toString() === n.toString() && e.listeners[t] === n) || (e.listeners[t] = n, e.addEventListener(i, (e => {
                (s[0] || "").split("|").forEach((t => { switch (t) {
                        case "prevent":
                            e.preventDefault();
                        case "propagation":
                            e.stopPropagation();
                        case "immediate":
                            e.stopImmediatePropagation() } })), n(e) }))) }
        exec(e) { this.tree = e || this.tree; for (let e in this.refs) delete this.refs[e];
            this.instance = this.reconcile(this.container, this.instance, this.tree) } }, OS.$Instance = class { constructor(e) { this.dom = e.dom, this.fiber = e.fiber, this.children = e.children } }, OS.$Fiber = class { constructor(e) { this.type = verify(e.type, "string") ? e.type.toLowerCase() : e.type, this.props = e.props }
        isText() { return this.type === OS.$Builder.TXT_TAGS }
        isSvg() { return this.type in OS.$Builder.SVG_TAGS } }, OS.$Parser = class { static get SEPARATOR() { return "_join_placement_code_" }
        static get VALUE_REGEX() { return /^["'`]([^"'`]*)(["'`])/ }
        static get QUOTE_REGEX() { return /^["'`]([^"'`]*)["'`]/g }
        static get NAME_REGEX() { return /^([\w-:_.\$\@]+)=?/ }
        static get START_REGEX() { return /^([^<]+)/ }
        static get TAG_REGEX() { return /^([\w-]+)/ }
        constructor(e, ...t) { this.partial = e, this.context = t }
        parse(e, t) { const n = [new OS.$Fiber({ type: null, props: { children: [] } })]; for (var s = 0; e;) { let l, p; if (!(e = e.trimLeft()).length) break; switch (s) {
                    case 0:
                        if ("<" === e[0]) "/" === e[1] ? ([e] = this.tokenize(e, 2, OS.$Parser.TAG_REGEX), s = -1) : ([e, l] = this.tokenize(e, 1, OS.$Parser.TAG_REGEX), n.push(new OS.$Fiber({ type: l, props: { children: [] } })), s = 1);
                        else {
                            [e, l] = this.tokenize(e, 0, OS.$Parser.START_REGEX); var i = this.replace(l, t);
                            i.length && n[n.length - 1].props.children.push(new OS.$Fiber({ type: OS.$Builder.TXT_TAGS, props: { nodeValue: i, children: [] } })) } break;
                    case 1:
                        if ("/" === e[0] && ">" === e[1]) n[n.length - 2].props.children.push(n.pop()), s = 0, e = e.substring(2);
                        else if (">" === e[0]) s = 0, e = e.substring(1);
                        else if ([e, l] = this.tokenize(e, 0, OS.$Parser.NAME_REGEX), l.length) { if (l.includes(OS.$Parser.SEPARATOR)) { var [r, o = ""] = this.replace(l, t).split("=");
                                r.length && (p = r, l = o.replace(OS.$Parser.QUOTE_REGEX, "$1")) } else if (p = l, [e, l] = this.tokenize(e, 0, OS.$Parser.VALUE_REGEX), l === OS.$Parser.SEPARATOR) { var a = this.count++;
                                l = verify(t[a], "string") ? t[a].trim() : t[a] } else l = this.replace(l, t);
                            p && p.length && (n[n.length - 1].props[p] = l) } break;
                    case -1:
                        n[n.length - 2].props.children.push(n.pop()), e = e.substring(1), s = 0 } } return n[0].props.children }
        exec() { this.count = 0; const e = this.partial.join(OS.$Parser.SEPARATOR),
                t = this.parse(e, this.context); return delete this.count, t }
        replace(e, t) { return e.replace(new RegExp(OS.$Parser.SEPARATOR, "g"), (() => { var e = t[this.count++]; return verify(e, "number", "boolean", "string") ? e : "" })) }
        tokenize(e, t, n) { var s = (e = e.substring(t)).match(n); return s ? [e.substring(s[0].length), s[1]] : [e, ""] } }, OS.$Template = class { static EXCLUDE_CHARS = ["@"];
        static COMMENT_CHARS = ["(#", "#)"];
        static CONTENT_CHARS = ["{{", "}}"];
        static SEGMENT_CHARS = ["($", "$)"];
        static get SAMPLES_TYPE() { return "/* ARVEX_COMPILED_TEMPLATE => */" }
        static get COMMENT_TYPE() { return Symbol.for("COMMENT") }
        static get INITIAL_TYPE() { return Symbol.for("INITIAL") }
        static get SEGMENT_TYPE() { return Symbol.for("SEGMENT") }
        static get CLASS_REGEX() { return /^(?:class\s+|function\s+(?:_class|_default|[A-Z]))/ }
        static get START_REGEX() { return OS.$Template.SEGMENT_CHARS[0].replace(/(\[|\(|\$)/g, "\\$1") }
        static get CLOSE_REGEX() { return OS.$Template.SEGMENT_CHARS[1].replace(/(\$|\)|\])/g, "\\$1") }
        static get ESCAPE_ARRAY() { return [new RegExp("s*(</?[ws=\"/.':;#-/?]+>)s*", "gi"), (e, t) => t.trim()] }
        static get QUOTES_ARRAY() { return ["(?<![\"'`])", "(?![\"'`])", "(?=(?:[^'\"`]|[\"'`][^'\"`]*[\"'`])*$)"] }
        static get SELF_ARRAY() { return [new RegExp(OS.$Template.QUOTES_ARRAY[0] + "(@self)" + OS.$Template.QUOTES_ARRAY[1], "g"), "$TEMPLATE_SELF"] }
        static get LOOP_ARRAY() { return [new RegExp(OS.$Template.QUOTES_ARRAY[0] + "(@loop)" + OS.$Template.QUOTES_ARRAY[1], "g"), "$TEMPLATE_LOOP"] }
        static get HELP_ARRAY() { return [new RegExp(OS.$Template.QUOTES_ARRAY[0] + "(@)" + OS.$Template.QUOTES_ARRAY[1], "g"), "$TEMPLATE_HELPERS."] }
        static get CHAINS_ARRAY() { return [new RegExp("([.]+[\\w\\d-_]+)" + OS.$Template.QUOTES_ARRAY[2], "g"), e => "['" + e.substring(1) + "']"] }
        static get LOGIC_TYPES() { return { set: e => "var " + e + ";", raw: e => "$TEMPLATE_TXT_OF(" + e + ");", echo: e => "$TEMPLATE_JSX_OF(" + e + ");", until: e => "while(!(" + e + ")){", enduntil: () => "}", while: e => "while(" + e + "){", endwhile: () => "}", unless: e => "if(!(" + e + ")){", endunless: () => "}", each: e => { var [t, n, s] = OS.$Template.LOGIC_TYPES.$LOOP(e.split("into")); return "$TEMPLATE_EACH(" + t + ",function(" + n + "," + s + ", $TEMPLATE_LOOP){" }, endeach: () => "});", range: e => { var [t, n, s] = OS.$Template.LOGIC_TYPES.$PROP(e.split("into")); return "$TEMPLATE_RANGE(" + n + "," + s + ",function(" + t + ", $TEMPLATE_LOOP){" }, endrange: () => "});", forelse: e => { var [t, n, s] = OS.$Template.LOGIC_TYPES.$LOOP(e.split("into")); return "if($TEMPLATE_SIZE(" + t + ")){$TEMPLATE_EACH(" + t + ",function(" + n + "," + s + ", $TEMPLATE_LOOP){" }, empty: () => "})}else{", endforelse: () => "}", if: e => "if(" + e + "){", elif: e => "}else if(" + e + "){", else: () => "}else{", endif: () => "}", try: () => "try{", catch: e => "}catch(" + e + "){", finally: () => "}finally{", endtry: () => "}", log: e => "console['log'](" + e + ");", info: e => "console['info'](" + e + ");", warn: e => "console['warn'](" + e + ");", error: e => "console['error'](" + e + ");", debug: e => "console['debug'](" + e + ");", $LOOP: e => { var t = /\[(.*),(.*)\]/g.exec(e[0]),
                        n = e[1].trim(),
                        s = e[0].trim(); return [n, t ? t[1].trim() : "_", t ? t[2].trim() : s] }, $PROP: e => { var t = e[1].split("to"); return [e[0].trim(), t[0].trim(), t[1].trim()] } } }
        constructor(e, t) { this.helpers = { theme: theme, random: random, truty: truty, falsy: falsy }, this.partial = this.scan(e), this.context = t || {} }
        scan(e) { return e.startsWith(OS.$Template.SAMPLES_TYPE) ? e.slice(OS.$Template.SAMPLES_TYPE.length) : OS.$Template.compile(e) }
        string() { var e = this.build(); return e.shift().reduce(((t, n, s) => t + n + (["string", "number", "boolean"].includes(typeof e[s]) ? e[s] : "")), "").trim() }
        build() { return new Function("", this.partial)()(this.context, this.helpers, (function(e, t, n) { t = e < t ? t + 1 : t - 1; for (var s = e; e < t ? s < t : s > t; e < t ? s++ : s--) n(s, { index: s, round: s + 1, odd: s % 2 > 0, even: s % 2 == 0, first: s === e, last: s === e < t ? s - 1 : s + 1 }) }), (function(e, t) { if (null === e) return e; for (var n = -1, s = Object.keys(e), i = s.length, r = 1; ++n < i && !1 !== t(s[n], e[s[n]], { index: n, round: r, odd: n % 2 > 0, even: n % 2 == 0, first: 0 === n, last: r === i });) r++ }), (function(e) { return verify(e, "array") ? e.length : verify(e, "object") ? Object.keys(e).length : null }), Error) }
        exec() { return new OS.$Parser(...this.build()).exec() }
        static replace(e, ...t) { return t.reduce(((e, [t, n]) => e.replace(t, n)), e) }
        static logic(e, t, n) { var s = this.replace(e, this.SELF_ARRAY, this.LOOP_ARRAY, this.HELP_ARRAY, this.CHAINS_ARRAY).split(" "),
                i = "$TEMPLATE_LIN_NO=" + t + ";$TEMPLATE_COL_NO=" + n + ";",
                r = s.slice(1).join(" "),
                o = s[0]; return this.LOGIC_TYPES[o] && this.LOGIC_TYPES[o](r) + i }
        static save(e, t, n, s, i) { e.push({ value: t === this.SEGMENT_TYPE ? this.logic(n, s, i) : n, linno: s, colno: i, type: t }) }
        static same(e, t, n) { const s = t.length; for (let i = 0; i < s; i++)
                if (e[n + i] !== t[i]) return !1;
            return !0 }
        static size(e, t, ...n) { const s = n.length; for (let i = 0; i < s; i++)
                if (this.same(e, n[i], t)) return n[i].length - 1;
            return 1 }
        static reset(e, t, n, s) { return [e += t + s, "", !1, n += s.length] }
        static parse(e) { const t = []; var n = "",
                s = !1,
                i = !1,
                r = 1,
                o = 1,
                a = 0,
                l = ""; for (let p = 0; p < e.length; p++) { if ("\n" === e[p] && (o = 1, r++), this.same(e, this.EXCLUDE_CHARS[0] + this.COMMENT_CHARS[0], p)) { if (i && (n += e[p])) continue;
                    [l, n, s, p] = this.reset(l, n, p, this.COMMENT_CHARS[0]) } else if (this.same(e, this.EXCLUDE_CHARS[0] + this.SEGMENT_CHARS[0], p)) { if (i && (n += e[p])) continue;
                    [l, n, s, p] = this.reset(l, n, p, this.SEGMENT_CHARS[0]) } else if (this.same(e, this.EXCLUDE_CHARS[0] + this.CONTENT_CHARS[0], p)) { if (i && (n += e[p])) continue;
                    [l, n, s, p] = this.reset(l, n, p, this.CONTENT_CHARS[0]) } else if (this.same(e, this.COMMENT_CHARS[0], p) || this.same(e, this.SEGMENT_CHARS[0], p) || this.same(e, this.CONTENT_CHARS[0], p)) { if (i && (n += e[p])) continue;
                    a = this.size(e, p, this.COMMENT_CHARS[0], this.SEGMENT_CHARS[0], this.CONTENT_CHARS[0]), this.same(e, this.COMMENT_CHARS[0], p) ? (l += n, i = !0) : (this.save(t, this.INITIAL_TYPE, l + n, r, o + a), l = ""), n = "", s = !0, p += a } else if (this.same(e, this.COMMENT_CHARS[1], p)) a = this.size(e, p, this.COMMENT_CHARS[1]), s ? this.save(t, this.COMMENT_TYPE, n.trim(), r, o + a) : l += n + this.COMMENT_CHARS[1], n = "", s = !1, i = !1, p += a;
                else if (this.same(e, this.SEGMENT_CHARS[1], p)) { if (i && (n += e[p])) continue;
                    a = this.size(e, p, this.SEGMENT_CHARS[1]), s ? this.save(t, this.SEGMENT_TYPE, n.trim(), r, o + a) : l += n + this.SEGMENT_CHARS[1], n = "", s = !1, p += a } else if (this.same(e, this.CONTENT_CHARS[1], p)) { if (i && (n += e[p])) continue; if (a = this.size(e, p, this.CONTENT_CHARS[1]), e[p + this.CONTENT_CHARS[1].length] === this.CONTENT_CHARS[1][1]) n += e[p];
                    else { if (s) { const e = ">" === n.trim()[0] ? "raw " + n.trim().slice(1) : "echo " + n.trim();
                            this.save(t, this.SEGMENT_TYPE, e, r, o + a) } else l += n + this.CONTENT_CHARS[1];
                        n = "", s = !1, p += a } } else n += e[p];
                o++ } return this.save(t, this.INITIAL_TYPE, l + n, r + 1, o + 1), t }
        static compile(e) { const t = this.parse(e.trim()).filter((e => e.type !== this.COMMENT_TYPE)).reduce(((e, t) => { var n = t || { value: "", linno: -1, colno: -1 }; return e + (n.type === this.INITIAL_TYPE ? "$TEMPLATE_TXT_OF(`" + this.replace(n.value, [/`/g, "\\`"]) + "`);$TEMPLATE_LIN_NO=" + n.linno + ";$TEMPLATE_COL_NO=" + n.colno + ";" : n.value) }), ""); return this.SAMPLES_TYPE + "return function($TEMPLATE_SELF,$TEMPLATE_HELPERS,$TEMPLATE_RANGE,$TEMPLATE_EACH,$TEMPLATE_SIZE,$TEMPLATE_ERROR){var $TEMPLATE_TXT_AR=[],$TEMPLATE_JSX_AR=[],$TEMPLATE_INDEX=0,$TEMPLATE_LIN_NO=0,$TEMPLATE_COL_NO=0;function $TEMPLATE_TXT_OF($LINE){if(!$TEMPLATE_TXT_AR[$TEMPLATE_INDEX]){$TEMPLATE_TXT_AR[$TEMPLATE_INDEX]='';}$TEMPLATE_TXT_AR[$TEMPLATE_INDEX]=($TEMPLATE_TXT_AR[$TEMPLATE_INDEX]+$LINE).replace(/\\n(:?\\s*\\n)+/g,'\\n');}function $TEMPLATE_JSX_OF($LINE){$TEMPLATE_JSX_AR[$TEMPLATE_INDEX]=$TEMPLATE_ESCAPE($LINE);$TEMPLATE_INDEX++;};function $TEMPLATE_ESCAPE($LINE){var $MAP={'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;','\\'':'&#39;'};return typeof $LINE!=='string'?$LINE:$LINE.replace(/[&<>\"']/g,function($CHAR){return $MAP[$CHAR]})}with($TEMPLATE_SELF||{}){try{" + this.replace(t, this.ESCAPE_ARRAY, [/(\n|\n\s+)/g, "\\n"], [/\s\s+/g, " "]) + "}catch(e){throw new $TEMPLATE_ERROR(e.message+'\" line: \"'+$TEMPLATE_LIN_NO+'\" pos: \"'+$TEMPLATE_COL_NO+'\"')}}return [$TEMPLATE_TXT_AR,...$TEMPLATE_JSX_AR]}" } }, OS.$Component = function(e) { const t = e.ctl || !1,
            n = e.tag || ""; var s = e.tpl || "",
            i = e.css || []; return s = OS.$Template.compile(s), i = i.map((e => OS.$Template.compile(`<style>${e}</style>`))),
            function(e) { e = verify(e, "undefined") ? {} : verify(e, "object") ? e : new e; const { attrs: r = [], props: o = {}, rules: a = {}, state: l = {}, setup: p = {} } = e; return class extends HTMLElement { static { t && (this.formAssociated = !0) }
                    cache = { drive: null, props: {}, state: {} };
                    setup = { created: null, mounted: null, adopted: null, updated: null, removed: null };
                    props = {};
                    state = {};
                    rules = {};
                    refs = {};
                    static get selector() { return n }
                    static get instance() { return "OS_COMPONENT_INSTANCE" }
                    static get observedAttributes() { return r }
                    static define(e) { return e = e || this.selector, customElements.get(e) || customElements.define(e, this), this }
                    constructor() { super(), this.truty = truty, this.falsy = falsy, this.setter = setter.bind(this), this.root = this.attachShadow({ mode: "open" }), t && (this.ctl = this.attachInternals(), Object.defineProperties(this, { form: { get: () => this.ctl.form }, name: { get: () => this.getAttribute("name") }, validity: { get: () => this.ctl.validity }, willValidate: { get: () => this.ctl.willValidate }, validationMessage: { get: () => this.ctl.validationMessage } }), this.checkValidity = () => this.ctl.checkValidity(), this.reportValidity = () => this.ctl.reportValidity()), this.initialize(), this.render(), this.setup.created && this.setup.created() }
                    attributeChangedCallback(e, t, n) { this.setup.updated && this.setup.updated(e, t, n, "attrs") }
                    connectedCallback() { this.setup.mounted && this.setup.mounted() }
                    disconnectedCallback() { this.setup.removed && this.setup.removed() }
                    adoptedCallback() { this.setup.adopted && this.setup.adopted() }
                    emit(e, t, n) { const s = new CustomEvent(e, { bubbles: !0, cancelable: !0, composed: !0, isTrusted: !0, detail: t });
                        Object.defineProperty(s, "target", { writable: !1, value: this }), this.dispatchEvent(s), !s.defaultPrevented && n && n.bind(this)(s) }
                    initialize() { Object.keys(o).forEach((e => { this.cache.props[e] = o[e], Object.defineProperty(this.props, e, { set: t => { const n = this.cache.props[e];
                                    n !== t && (this.cache.props[e] = t, this.render(), this.setup.updated && this.setup.updated(e, n, t, "props")) }, get: () => this.cache.props[e] }), Object.defineProperty(this, e, { set: t => { const n = this.cache.props[e];
                                    n !== t && (this.cache.props[e] = t, this.render(), this.setup.updated && this.setup.updated(e, n, t, "props")) }, get: () => this.cache.props[e] }) })), Object.keys(l).forEach((e => { this.cache.state[e] = l[e], Object.defineProperty(this.state, e, { set: t => { const n = this.cache.state[e];
                                    n !== t && (this.cache.state[e] = t, this.render(), this.setup.updated && this.setup.updated(e, n, t, "state")) }, get: () => this.cache.state[e] }) })), Object.keys(a).forEach((e => { verify(a[e], "function") && (this.rules[e] = a[e].bind(this)) })), ["created", "mounted", "adopted", "updated", "removed"].forEach((e => { this.setup[e] = verify(p[e], "function") && p[e].bind(this) })) }
                    render() { const e = { props: this.cache.props, state: this.cache.state, rules: this.rules, refs: this.refs, this: this },
                            t = i.map((t => { const n = new OS.$Template(t || "", e); return n.helpers = {...n.helpers, ...e }, n.exec() })).flat(),
                            n = new OS.$Template(s || "", e);
                        n.helpers = {...n.helpers, ...e }; const r = [...t, ...n.exec()];
                        this.cache.drive || (this.cache.drive = new OS.$Builder(this.root), this.cache.drive.refs = this.refs), this.cache.drive.exec(r) } } } } })(), OS.$Theme("colors", "OS-WHITE", "254 254 254"), OS.$Theme("colors", "OS-LIGHT", "245 245 245"), OS.$Theme("colors", "OS-SHADE", "209 209 209"), OS.$Theme("colors", "OS-PRIME", "33 150 243"), OS.$Theme("colors", "OS-BLACK", "29 29 29"), document.addEventListener("DOMContentLoaded", (e => { OS$LOAD.forEach((t => t(e))) })), OS.$Component.Wrapper = OS.$Component({ tag: OS.$Selectors.Wrapper, tpl: "\n        <slot />\n    ", css: ["\n        :host {\n            width: 100%; \n            display: block;\n            min-height: 100dvh;\n            ($ if @props.closed $)\n                height: 100dvh;\n                overflow: hidden;\n            ($ endif $)\n        }\n\n        ($ if @props.closed && @state.screen $)\n            @media (min-width: 1024px) {\n                :host {\n                    height: unset;\n                    overflow: unset;\n                }\n            }\n        ($ endif $)\n    "] })({ attrs: ["closed"], props: { closed: !1 }, state: { screen: !0, scroll: 0 }, rules: { toggle() { const e = [OS.$Selectors.Fixedbar, OS.$Selectors.Datatable, OS.$Selectors.Sidebar, OS.$Selectors.Modal, OS.$Selectors.Select, OS.$Selectors.Date, OS.$Selectors.Time, OS.$Selectors.Dropdown],
                t = [OS.$Selectors.Modal, OS.$Selectors.Fixedbar, OS.$Selectors.Sidebar],
                n = [];
            document.querySelectorAll(e.join(", ")).forEach((e => { e.state.show && n.push(e) })), n.length ? (this.state.screen = !n.some((e => e.tagName.toLowerCase() === OS.$Selectors.Sidebar ? t.includes(e.tagName.toLowerCase()) && e.fixed : t.includes(e.tagName.toLowerCase()))), document.documentElement.style.scrollBehavior = "unset", this.state.scroll = window.scrollY, this.props.closed = !0, this.scroll(0, this.state.scroll)) : (this.state.screen = !0, this.props.closed = !1, window.scroll(0, this.state.scroll), document.documentElement.style.scrollBehavior = "") } }, setup: { created() { OS.$Wrapper = this }, updated(e, t, n, s) { "props" === s && "closed" === e && (this.props[e] = this.truty(n)), "props" === s && (this.setter(e, n, ["closed"]), "closed" === e) && this.emit("change:" + e, { data: n }) } } }), OS.$Component.Toaster = OS.$Component({ tag: OS.$Selectors.Toaster, tpl: '\n        <div ref="wrapper" part="wrapper">\n            <slot />\n        </div>\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }   \n\n        :host {\n            inset: 0;\n            width: 100%; \n            height: 100dvh;\n            position: fixed;\n            pointer-events: none;\n            z-index: {{ @state.layer }};\n        }\n\n        [part="wrapper"] {\n            gap: .5rem;\n            width: 100%;\n            height: 100%;\n            margin: auto;\n            padding: 1rem;\n            display: flex;\n            overflow: hidden;\n            align-items: {{ @props.horisontal }};\n            justify-content: {{ @props.vertical }};\n            ($ if @props.vertical === "start" $)\n                flex-direction: column-reverse;\n            ($ else $)\n                flex-direction: column;\n            ($ endif $)\n        }\n\n        @media (min-width: 640px) {\n            [part="wrapper"] {\n                max-width: 640px;\n            }\n        }\n\n        @media (min-width: 768px) {\n            [part="wrapper"] {\n                max-width: 768px;\n            }\n        }\n\n        @media (min-width: 1024px) {\n            [part="wrapper"] {\n                max-width: 1024px;\n            }\n        }\n\n        @media (min-width: 1280px) {\n            [part="wrapper"] {\n                max-width: 1280px;\n            }\n        }\n\n        @media (min-width: 1536px) {\n            [part="wrapper"] {\n                max-width: 1536px;\n            }\n        }\n    '] })({ attrs: ["horisontal", "vertical"], props: { horisontal: "center", vertical: "end" }, state: { layer: OS.$Theme.Layer() }, rules: { layer() { const e = OS.$Theme.Layer();
            this.state.layer !== e - 1 && (this.state.layer = e) } }, setup: { created() { OS.$Toaster = this, this.Toast = (e, t, n) => { const s = document.createElement(OS.$Selectors.Toast);
                n && (s.props.timer = n), s.innerHTML = e, s.props.theme = t, this.appendChild(s) } }, mounted() { document.addEventListener("DOMSubtreeModified", this.rules.layer) }, removed() { document.removeEventListener("DOMSubtreeModified", this.rules.layer) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "vertical":
                case "horisontal":
                    this.props[e] = n }
            if ("props" === s) switch (this.setter(e, n, ["horisontal", "vertical"]), e) {
                case "vertical":
                case "horisontal":
                    this.emit("change:" + e, { data: n }) } } } }), OS.$Component.Toast = OS.$Component({ tag: OS.$Selectors.Toast, tpl: '\n        <slot name="start" />\n        <slot />\n        <slot name="end" />\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        @keyframes slide-up-off {\n            0% { opacity: 1; transform: translateY(0px); }\n            100% { opacity: 0; transform: translateY(40px); }\n        }\n\n        @keyframes slide-down-off {\n            0% { opacity: 1; transform: translateY(0px); }\n            100% { opacity: 0; transform: translateY(-40px); }\n        }\n\n        @keyframes slide-up-on {\n            0% { opacity: 0; transform: translateY(40px); }\n            100% { opacity: 1; transform: translateY(0px); }\n        }\n\n        @keyframes slide-down-on {\n            0% { opacity: 0; transform: translateY(-40px); }\n            100% { opacity: 1; transform: translateY(0px); }\n        }\n\n        :host {\n            width: 100%;\n            display: block;\n            font-weight: 600;\n            pointer-events: all;\n            padding: .75rem 1rem;\n            border-radius: .25rem;\n            color: {{ @theme.colors("OS-WHITE") }};\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n            box-shadow: {{ @theme.colors("OS-BLACK", 20) }} 0px 2px 12px;\n            background: var(--{{ @props.theme || "x" }}, {{ @theme.colors("OS-BLACK") }});\n            animation: {{ (@state.position === "start" ? "slide-down" : "slide-up") + "-" + (@state.flip ? "off" : "on") }} 200ms ease-in-out forwards;\n\n            --info: {{ @theme.colors("BLUE", 500) }};\n            --error: {{ @theme.colors("RED", 500) }};\n            --success: {{ @theme.colors("GREEN", 500) }};\n            --warning: {{ @theme.colors("YELLOW", 500) }};\n        }\n\n        @media (min-width: 1024px) {\n            :host {\n                min-width: 200px; \n                max-width: 500px;\n                width: max-content;\n            }\n        }\n    '] })({ attrs: ["theme", "timer"], props: { theme: "", timer: 5e3 }, state: { position: "end", flip: !1 }, setup: { created() { OS.$Toaster && (this.state.position = OS.$Toaster.props.vertical) }, mounted() { setTimeout((() => { this.state.flip = !0, setTimeout((() => { this.remove() }), 250) }), this.props.timer) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "theme":
                    this.props[e] = n; break;
                case "timer":
                    this.props[e] = +n || 5e3 }
            if ("props" === s) switch (this.setter(e, n, ["theme", "timer"]), e) {
                case "theme":
                case "timer":
                    this.emit("change:" + e, { data: n }) } } } }), OS.$Component.Topbar = OS.$Component({ tag: OS.$Selectors.Topbar, tpl: '\n        <header ref="content" part="content">\n            <slot />\n        </header>\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        :host {\n            width: 100%;\n            display: block;\n            ($ if !@props.transparent $)\n                background: {{ @theme.colors("OS-PRIME") }};\n            ($ endif $)\n            ($ if @props.fixed $)\n                top: 0;\n                position: sticky;\n                z-index: {{ @theme.layer() }};\n            ($ endif $)\n        }\n\n        [part="content"] {\n            gap: 1rem;\n            width: 100%;\n            display: flex;\n            margin: 0 auto;\n            align-items: center;\n            padding: .75rem 1rem;\n            justify-content: {{ @props.align }};\n        }\n\n        @media (min-width: 640px) {\n            [part="content"] {\n                max-width: 640px;\n            }\n        }\n\n        @media (min-width: 768px) {\n            [part="content"] {\n                max-width: 768px;\n            }\n        }\n\n        @media (min-width: 1024px) {\n            [part="content"] {\n                max-width: 1024px;\n            }\n        }\n\n        @media (min-width: 1280px) {\n            [part="content"] {\n                max-width: 1280px;\n            }\n        }\n\n        @media (min-width: 1536px) {\n            [part="content"] {\n                max-width: 1536px;\n            }\n        }\n    '] })({ attrs: ["fixed", "align", "transparent"], props: { fixed: !1, align: "center", transparent: !1 }, setup: { updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "align":
                    this.props.align = n; break;
                case "fixed":
                case "transparent":
                    this.props[e] = this.truty(n) }
            if ("props" === s) switch (this.setter(e, n, ["fixed", "align", "transparent"]), e) {
                case "fixed":
                case "align":
                case "transparent":
                    this.emit("change:" + e, { data: n }) } } } }), OS.$Component.Modal = OS.$Component({ tag: OS.$Selectors.Modal, tpl: '\n        ($ if @state.show $)\n            <div ref="content" part="content" @click:propagation="{{ () => {} }}">\n                ($ if @truty(@props.label, [""]) $)\n                    <label ref="label" part="label">{{> @props.label }}</label>\n                ($ endif $)\n                <div ref="items" part="items">\n                    <slot />\n                </div>\n            </div>\n        ($ endif $)\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n        \n        @keyframes opacity-off {\n            0% { opacity: 1; }\n            100% { opacity: 0; }\n        }\n\n        @keyframes slide-off {\n            0% { transform: translateY(0px); }\n            100% { transform: translateY(20px); }\n        }\n\n        @keyframes opacity-on {\n            0% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n\n        @keyframes slide-on {\n            0% { transform: translateY(20px); }\n            100% { transform: translateY(0px); }\n        }\n\n        ($ if @state.show $)\n            ::-webkit-scrollbar {\n                -webkit-appearance: none;\n                background: transparent;\n                -moz-appearance: none;\n                appearance: none;\n                height: 5px;\n                width: 5px;\n            }\n            \n            ::-webkit-scrollbar-track {\n                background: transparent;\n            }\n            \n            ::-webkit-scrollbar-thumb {\n                border-radius: 2px; \n                background: {{ @theme.colors("GRAY", 300) }};\n            }\n            \n            ::-webkit-scrollbar-thumb:hover {\n                background: {{ @theme.colors("GRAY", 400) }};\n            }  \n        ($ endif $)\n\n        :host {\n            inset: 0;\n            width: 100%;\n            display: flex;\n            height: 100dvh;\n            position: fixed;\n            align-items: end;\n            justify-content: center;\n            backdrop-filter: blur(5px);\n            ($ if !@props.expand $)\n                pointer-events: none;\n            ($ endif $)\n            z-index: {{ @theme.layer() }};\n            background: {{ @theme.colors("OS-BLACK", 10) }};\n            animation: opacity-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n        }\n\n        ($ if @state.show $)\n            [part="content"] {\n                width: 100%;\n                display: flex;\n                overflow: hidden;\n                max-height: 90dvh; \n                border-radius: .25rem;\n                flex-direction: column;\n                background: {{ @theme.colors("OS-WHITE") }};\n                box-shadow: {{ @theme.colors("OS-BLACK", 20) }} 0px 2px 12px;\n                animation: slide-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            ($ if @truty(@props.label, [""]) $)\n                [part="label"] {\n                    width: 100%;\n                    display: block;\n                    padding: .65rem;\n                    font-weight: 700;\n                    text-align: center;\n                    border-bottom-width: 1px;\n                    border-bottom-style: solid;\n                    color: {{ @theme.colors("OS-BLACK") }};\n                    font-size: {{  @theme.fonts.sizes("SMALL") }};\n                    line-height: {{  @theme.fonts.lines("SMALL") }};\n                    border-bottom-color: {{ @theme.colors("OS-SHADE") }};\n                }\n            ($ endif $)\n\n            [part="items"] {\n                flex: 1;\n                width: 100%;\n                overflow: overlay;\n            }\n        ($ endif $)\n\n        @media (min-width: 1024px) {    \n            :host {\n                align-items: center;\n                justify-content: center;\n            }\n\n            ($ if @state.show $)\n                [part="content"] {\n                    width: 50%;\n                    max-height: 80dvh; \n                }\n            ($ endif $)\n        }\n    '] })({ attrs: ["label", "expand"], props: { label: "", expand: !1 }, state: { show: !1 }, rules: { toggle() { this.props.expand = !this.props.expand }, blur(e) {!this.root.contains(e.target) && this.props.expand && this.rules.toggle() } }, setup: { created() { this.show = function() { this.props.expand = !0 }, this.hide = function() { this.props.expand = !1 }, this.toggle = this.rules.toggle }, removed() { window.removeEventListener("click", this.rules.blur) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "label":
                    this.props.label = n; break;
                case "expand":
                    this.props.expand = this.truty(n) }
            if ("state" === s && "show" === e && (OS.$Wrapper && OS.$Wrapper.rules.toggle(), setTimeout((() => { window[(n ? "add" : "remove") + "EventListener"]("click", this.rules.blur) }), 0), this.emit("change:expand", { data: n })), "props" === s) switch (this.setter(e, n, ["label", "expand"]), e) {
                case "label":
                    this.emit("change:" + e, { data: n }); break;
                case "expand":
                    n ? this.state.show = n : setTimeout((() => { this.state.show = n }), 250) } } } }), OS.$Component.Dropdown = OS.$Component({ tag: OS.$Selectors.Dropdown, tpl: '\n        <slot name="trigger" />\n        ($ if @state.show $)\n            <div ref="modal" part="modal">\n                <div ref="content" part="content" @click:propagation="{{ () => {} }}">\n                    ($ if @truty(@props.label, [""]) $)\n                        <label ref="label" part="label">{{> @props.label }}</label>\n                    ($ endif $)\n                    <div ref="items" part="items">\n                        <slot />                   \n                    </div>\n                </div>\n            </div>\n        ($ endif $)\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n        \n        @keyframes opacity-off {\n            0% { opacity: 1; }\n            100% { opacity: 0; }\n        }\n\n        @keyframes slide-off {\n            0% { transform: translateY(0px); }\n            100% { transform: translateY(20px); }\n        }\n\n        @keyframes opacity-on {\n            0% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n\n        @keyframes slide-on {\n            0% { transform: translateY(20px); }\n            100% { transform: translateY(0px); }\n        }\n\n        ($ if @state.show $)\n            ::-webkit-scrollbar {\n                -webkit-appearance: none;\n                background: transparent;\n                -moz-appearance: none;\n                appearance: none;\n                height: 5px;\n                width: 5px;\n            }\n            \n            ::-webkit-scrollbar-track {\n                background: transparent;\n            }\n            \n            ::-webkit-scrollbar-thumb {\n                border-radius: 2px; \n                background: {{ @theme.colors("GRAY", 300) }};\n            }\n            \n            ::-webkit-scrollbar-thumb:hover {\n                background: {{ @theme.colors("GRAY", 400) }};\n            }\n        ($ endif $)  \n\n        :host {\n            position: relative;\n            display: inline-block;\n        }\n\n        ($ if @state.show $)\n            [part="modal"] {\n                inset: 0;\n                width: 100%;\n                display: flex;\n                height: 100dvh;\n                position: fixed;\n                align-items: end;\n                justify-content: center;\n                backdrop-filter: blur(5px);\n                ($ if !@props.expand $)\n                    pointer-events: none;\n                ($ endif $)\n                z-index: {{ @theme.layer() }};\n                background: {{ @theme.colors("OS-BLACK", 10) }};\n                animation: opacity-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            [part="content"] {\n                width: 100%;\n                outline: none;\n                display: flex;\n                overflow: hidden;\n                max-height: 90dvh; \n                border-radius: .25rem;\n                flex-direction: column;\n                background: {{ @theme.colors("OS-WHITE") }};\n                box-shadow: {{ @theme.colors("OS-BLACK", 20) }} 0px 2px 12px;\n                animation: slide-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            ($ if @truty(@props.label, [""]) $)\n                [part="label"] {\n                    width: 100%;\n                    display: block;\n                    padding: .65rem;\n                    font-weight: 700;\n                    text-align: center;\n                    border-bottom-width: 1px;\n                    border-bottom-style: solid;\n                    color: {{ @theme.colors("OS-BLACK") }};\n                    font-size: {{  @theme.fonts.sizes("SMALL") }};\n                    line-height: {{  @theme.fonts.lines("SMALL") }};\n                    border-bottom-color: {{ @theme.colors("OS-SHADE") }};\n                }\n            ($ endif $)\n\n            [part="items"] {\n                flex: 1;\n                width: 100%;\n                display: flex;\n                overflow: overlay;\n                flex-direction: column; \n            }\n\n            @media (min-width: 1024px) {\n                [part="modal"] {\n                    inset: auto;\n                    min-width: 200px;\n                    max-width: 400px;\n                    width: max-content;\n                    position: absolute;\n                    height: max-content;\n                    background: transparent;\n                    {{ @state.pos ? "bottom" : "top" }}: 0;\n                    ($ if @props.position === "start" $)\n                        left: 0;\n                    ($ elif @props.position === "end" $)\n                        right: 0;\n                    ($ else $)\n                        left: 50%;\n                        transform: translateX(-50%);\n                    ($ endif $)\n                }\n\n                [part="content"] {\n                    max-height: 300px;\n                }\n\n                ($ if @truty(@props.label, [""]) $)\n                    [part="label"] {\n                        display: none;\n                    }\n                ($ endif $)\n            }\n        ($ endif $)\n    '] })({ attrs: ["label", "position"], props: { position: "center", expand: !1, label: "" }, state: { show: !1, pos: !1 }, rules: { toggle() { this.props.expand = !this.props.expand }, blur(e) {!this.root.contains(e.target) && this.props.expand && this.rules.toggle() }, pos() { this.state.show && (this.state.pos = window.innerHeight - this.getBoundingClientRect().top < this.refs.modal.clientHeight) } }, setup: { created() { this.show = function() { this.props.expand = !0 }, this.hide = function() { this.props.expand = !1 }, this.toggle = this.rules.toggle }, mounted() { window.addEventListener("scroll", this.rules.pos), this.querySelector("[slot=trigger]").addEventListener("click", this.rules.toggle) }, removed() { window.removeEventListener("click", this.rules.blur), window.removeEventListener("scroll", this.rules.pos), this.querySelector("[slot=trigger]").removeEventListener("click", this.rules.toggle) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "label":
                case "position":
                    this.props[e] = n }
            if ("state" === s && "show" === e && (OS.$Wrapper && OS.$Wrapper.rules.toggle(), setTimeout((() => { window[(n ? "add" : "remove") + "EventListener"]("click", this.rules.blur) }), 0), this.emit("change:expand", { data: n })), "props" === s) switch (this.setter(e, n, ["label", "position"]), e) {
                case "label":
                case "position":
                    this.emit("change:" + e, { data: n }); break;
                case "expand":
                    n ? (this.state.show = n, this.rules.pos()) : setTimeout((() => { this.state.show = n }), 250) } } } }), OS.$Component.Sidebar = OS.$Component({ tag: OS.$Selectors.Sidebar, tpl: '\n        ($ if @state.show $)\n            <div ref="content" part="content" @click:propagation="{{ () => {} }}">\n                <a href="#" ref="target" part="target" />\n                <slot />\n            </div>\n        ($ endif $)\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n        \n        @keyframes opacity-off {\n            0% { opacity: 1; }\n            100% { opacity: 0; }\n        }\n\n        @keyframes slide-off {\n            0% { transform: translateX(0px); }\n            100% { transform: translateX({{ @props.position === "end" ? document.documentElement.dir === "rtl" ? -20 : 20 : document.documentElement.dir === "rtl" ? 20 : -20 }}px); }\n        }\n\n        @keyframes width-off {\n            0% { width: 240px; }\n            100% { width: 0; }\n        }\n\n        @keyframes opacity-on {\n            0% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n\n        @keyframes slide-on {\n            0% { transform: translateX({{ @props.position === "end" ? document.documentElement.dir === "rtl" ? -20 : 20 : document.documentElement.dir === "rtl" ? 20 : -20 }}px); }\n            100% { transform: translateX(0px); }\n        }\n\n        @keyframes width-on {\n            0% { width: 0; }\n            100% { width: 240px; }\n        }\n\n        ($ if @state.show $)\n            ::-webkit-scrollbar {\n                -webkit-appearance: none;\n                background: transparent;\n                -moz-appearance: none;\n                appearance: none;\n                height: 5px;\n                width: 5px;\n            }\n            \n            ::-webkit-scrollbar-track {\n                background: transparent;\n            }\n            \n            ::-webkit-scrollbar-thumb {\n                border-radius: 2px; \n                background: {{ @theme.colors("GRAY", 300) }};\n            }\n            \n            ::-webkit-scrollbar-thumb:hover {\n                background: {{ @theme.colors("GRAY", 400) }};\n            }  \n        ($ endif $)\n\n        :host {\n            inset: 0;\n            width: 100%;\n            display: flex;\n            height: 100dvh;\n            position: fixed;\n            backdrop-filter: blur(5px);\n            ($ if !@props.expand $)\n                pointer-events: none;\n            ($ endif $)\n            z-index: {{ @theme.layer() }};\n            justify-content: {{ @props.position }};\n            background: {{ @theme.colors("OS-BLACK", 10) }};\n            animation: opacity-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n        }\n\n        ($ if @state.show $)\n            [part="target"] {\n                width: 0;\n                height: 0;\n                opacity: 0;\n                left: -9999px;\n                right: -9999px;\n                display: block;\n                position: fixed;\n            }\n\n            [part="content"] {\n                height: 100%; \n                width: 240px;\n                display: flex;\n                max-width: 240px;\n                overflow: overlay;\n                min-width: max-content;\n                flex-direction: column; \n                background: {{ @theme.colors("OS-WHITE") }};\n                box-shadow: {{ @theme.colors("OS-BLACK", 20) }} 0px 2px 12px;\n                animation: slide-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n        ($ endif $)\n\n        ($ if !@props.fixed $)\n            @media (min-width: 1024px) {\n                :host {\n                    z-index: 0;\n                    width: 240px;\n                    position: sticky;\n                    animation: opacity-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards,\n                        width-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n                }\n\n                [part="content"] {\n                    width: 100%;\n                    max-width: 100%;\n                }\n            }  \n        ($ endif $)\n    '] })({ attrs: ["position", "fixed"], props: { position: "start", fixed: !1, expand: !0 }, state: { show: !0 }, rules: { toggle() { this.props.expand = !this.props.expand }, blur(e) {!this.root.contains(e.target) && this.props.expand && this.rules.toggle() }, resize() { matchMedia("(min-width: 1024px)").matches || this.hide() } }, setup: { created() { this.show = function() { this.props.expand = !0 }, this.hide = function() { this.props.expand = !1 }, this.toggle = this.rules.toggle }, mounted() { this.rules.resize(), this.hasAttribute("position") || (this.props.position = document.documentElement.position), this.hasAttribute("fixed") ? this.hide() : window.addEventListener("resize", this.rules.resize) }, removed() { window.removeEventListener("click", this.rules.blur), window.removeEventListener("resize", this.rules.resize) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "position":
                    this.props.position = n; break;
                case "fixed":
                    this.props.fixed = this.truty(n) }
            if ("state" === s && "show" === e && (OS.$Wrapper && OS.$Wrapper.rules.toggle(), n && this.refs.target.focus(), setTimeout((() => { n ? !this.props.fixed && matchMedia("(min-width: 1024px)").matches || window.addEventListener("click", this.rules.blur) : window.removeEventListener("click", this.rules.blur) }), 0), this.emit("change:expand", { data: n })), "props" === s) switch (this.setter(e, n, ["position", "fixed"]), e) {
                case "fixed":
                    window[(n ? "remove" : "add") + "EventListener"]("resize", this.rules.resize); break;
                case "expand":
                    n ? this.state.show = n : setTimeout((() => { this.state.show = n }), 250) } } } }), OS.$Component.Datatable = OS.$Component({ tag: OS.$Selectors.Datatable, tpl: '\n        ($ if @truty(@props.title, [""]) || @props.print || @props.search || @props.filter || @props.download || @this.querySelector("[slot=tools-start]") || @this.querySelector("[slot=tools-end]") $)\n            <div ref="topbar" part="topbar">\n                ($ if @props.search && @state.search $)\n                    <input type="search" ref="search" part="search" @input="{{ @rules.search }}" placeholder="{{ @state.locales[@props.locale].Search }}" />\n                ($ elif @truty(@props.title, [""]) $)\n                    <h1 ref="title" part="title">{{ @props.title }}</h1>\n                ($ endif $)\n                ($ if @props.print || @props.search || @props.filter || @props.download || @this.querySelector("[slot=tools-start]") || @this.querySelector("[slot=tools-end]") $)\n                    <div ref="tools" part="tools">\n                        <slot name="tools-start" />\n                        ($ if @props.search $)\n                            <button search title="{{ @state.locales[@props.locale].Search }}" ref="btn" part="btn" @click="{{ @rules.toggle }}">\n                                <svg ref="icon" part="icon" fill="currentColor" viewBox="0 0 48 48">\n                                    <path d="M39.7 43.2L26.2894 29.8C25.2965 30.5641 24.1591 31.1635 22.8771 31.5981C21.5951 32.0327 20.1934 32.25 18.6719 32.25C14.8282 32.25 11.597 30.9383 8.9782 28.3149C6.35943 25.6914 5.05005 22.4998 5.05005 18.7399C5.05005 14.98 6.36177 11.7917 8.9852 9.175C11.6086 6.55833 14.8003 5.25 18.5602 5.25C22.3201 5.25 25.5084 6.56073 28.125 9.1822C30.7417 11.8037 32.05 14.9954 32.05 18.7575C32.05 20.2858 31.8334 21.675 31.4 22.925C30.9667 24.175 30.3334 25.3667 29.5 26.5L43 39.9L39.7 43.2ZM18.5721 27.7C21.1049 27.7 23.2261 26.841 24.9357 25.1229C26.6453 23.4049 27.5 21.2874 27.5 18.7706C27.5 16.2538 26.6443 14.1295 24.9327 12.3977C23.2212 10.6659 21.1025 9.8 18.5765 9.8C16.0228 9.8 13.8882 10.6659 12.1729 12.3977C10.4577 14.1295 9.60005 16.2538 9.60005 18.7706C9.60005 21.2874 10.4552 23.4049 12.1656 25.1229C13.876 26.841 16.0115 27.7 18.5721 27.7Z" />\n                                </svg>\n                            </button>         \n                        ($ endif $)\n                        ($ if @props.print $)\n                            <button title="{{ @state.locales[@props.locale].Print }}" ref="btn" part="btn" @click="{{ @rules.print }}">\n                                <svg ref="icon" part="icon" fill="currentColor" viewBox="0 0 48 48">                      \n                                    <path d="M37.05 13H11V5H37.05V13ZM36.2 24.8C36.8 24.8 37.2917 24.6198 37.675 24.2594C38.0583 23.899 38.25 23.4208 38.25 22.825C38.25 22.2417 38.0604 21.75 37.6813 21.35C37.3021 20.95 36.8167 20.75 36.225 20.75C35.6083 20.75 35.1167 20.951 34.75 21.3531C34.3833 21.7552 34.2 22.2375 34.2 22.8C34.2 23.4 34.3833 23.8833 34.75 24.25C35.1167 24.6167 35.6 24.8 36.2 24.8ZM32.45 39.4V32.45H15.55V39.4H32.45ZM37.05 43.7H11V34.05H3V20.85C3 19.0617 3.60695 17.5396 4.82085 16.2837C6.03472 15.0279 7.52777 14.4 9.3 14.4H38.7C40.5083 14.4 42.0188 15.0279 43.2313 16.2837C44.4438 17.5396 45.05 19.0617 45.05 20.85V34.05H37.05V43.7Z" />\n                                </svg>\n                            </button>         \n                        ($ endif $)\n                        ($ if @props.download $)\n                            <button title="{{ @state.locales[@props.locale].Download }}" ref="btn" part="btn" @click="{{ @rules.download }}">\n                                <svg ref="icon" part="icon" fill="currentColor" viewBox="0 0 48 48">\n                                    <path d="M12.6 41.05C9.43333 41.05 6.70833 39.925 4.425 37.675C2.14167 35.425 1 32.6833 1 29.45C1 26.7167 1.85 24.25 3.55 22.05C5.25 19.85 7.45 18.5333 10.15 18.1C10.9167 15.1 12.4 12.6 14.6 10.6C16.8 8.6 19.3667 7.4 22.3 7V25.6L18.4 21.6L15.95 24.05L24 32.2L32.05 24.05L29.65 21.6L25.75 25.6V7C29.1833 7.43333 32.0833 8.95 34.45 11.55C36.8167 14.15 38.1 17.2667 38.3 20.9V22.1C40.8 22.3667 42.8583 23.375 44.475 25.125C46.0917 26.875 46.9 29.0333 46.9 31.6C46.9 34.2333 45.9833 36.4667 44.15 38.3C42.3167 40.1333 40.0833 41.05 37.45 41.05H12.6Z" />\n                                </svg>\n                            </button>         \n                        ($ endif $)\n                        ($ if @props.filter $)\n                            <div ref="dropdown" part="dropdown">\n                                <button title="{{ @state.locales[@props.locale].Columns }}" ref="btn" part="btn" @click="{{ @rules.filter }}">\n                                    <svg ref="icon" part="icon" fill="currentColor" viewBox="0 0 48 48">\n                                        <path d="M7.55 39.25C6.55 39.25 5.70833 38.9 5.025 38.2C4.34167 37.5 4 36.6667 4 35.7V12.55C4 11.5696 4.34167 10.7328 5.025 10.0397C5.70833 9.34657 6.55 9 7.55 9H12.05C13.0167 9 13.8333 9.34657 14.5 10.0397C15.1667 10.7328 15.5 11.5696 15.5 12.55V35.7C15.5 36.6667 15.1667 37.5 14.5 38.2C13.8333 38.9 13.0167 39.25 12.05 39.25H7.55ZM21.3 39.25C20.3333 39.25 19.5 38.9 18.8 38.2C18.1 37.5 17.75 36.6667 17.75 35.7V12.55C17.75 11.5696 18.1 10.7328 18.8 10.0397C19.5 9.34657 20.3333 9 21.3 9H25.8C26.7667 9 27.5917 9.34657 28.275 10.0397C28.9583 10.7328 29.3 11.5696 29.3 12.55V35.7C29.3 36.6667 28.9583 37.5 28.275 38.2C27.5917 38.9 26.7667 39.25 25.8 39.25H21.3ZM35.05 39.25C34.05 39.25 33.2083 38.9 32.525 38.2C31.8417 37.5 31.5 36.6667 31.5 35.7V12.55C31.5 11.5696 31.8417 10.7328 32.525 10.0397C33.2083 9.34657 34.05 9 35.05 9H39.5C40.4804 9 41.3255 9.34657 42.0353 10.0397C42.7451 10.7328 43.1 11.5696 43.1 12.55V35.7C43.1 36.6667 42.7451 37.5 42.0353 38.2C41.3255 38.9 40.4804 39.25 39.5 39.25H35.05Z" />\n                                    </svg>\n                                </button>   \n                                ($ if @state.show $)\n                                    <div ref="modal" part="modal">\n                                        <div ref="content" part="content" @click:propagation="{{ () => {} }}">\n                                            <label ref="label" part="label">{{ @state.locales[@props.locale].Columns }}</label>\n                                            <div ref="items" part="items">\n                                                ($ each col into @props.cols $)\n                                                    <div ref="item" part="item">\n                                                        <input type="checkbox" ref="checkbox" part="checkbox" data-for="{{ col.name }}" @change="{{ @rules.change }}" checked="{{ col.visible !== false }}" />\n                                                        <span ref="text" part="text">{{ col.text || col.name }}</span>\n                                                    </div>\n                                                ($ endeach $)          \n                                            </div>\n                                        </div>\n                                    </div>  \n                                ($ endif $)\n                            </div>      \n                        ($ endif $)\n                        <slot name="tools-end" />\n                    </div>\n                ($ endif $)\n            </div>\n        ($ endif $)\n        <div ref="wrapper" part="wrapper">\n            <table ref="table" part="table">\n                <thead ref="tablehead" part="table-head">\n                    <tr ref="tableheadrow" part="table-head-row">\n                        ($ each col into @props.cols $)\n                            ($ if col.visible !== false $)\n                                <td ref="tableheadcol" part="table-head-col">\n                                    {{ col.text || col.name }}\n                                </td>\n                            ($ endif $)\n                        ($ endeach $)\n                    </tr>\n                </thead>\n                <tbody ref="tablebody" part="table-body">\n                    ($ forelse row into @props.rows $)\n                        <tr ref="tablebodyrow" part="table-body-row">\n                            ($ each col into @props.cols $)\n                                ($ if col.visible !== false $)\n                                    <td ref="tablebodycol" part="table-body-col">\n                                        {{> col.render ? col.render(row) : row[col.name] }}\n                                    </td>\n                                ($ endif $)\n                            ($ endeach $)\n                        </tr>\n                    ($ empty $)\n                        <tr ref="tableemptyrow" part="table-empty-row">\n                            <td ref="tablebodycol" part="table-empty-col">\n                                {{ "NO DATA FOUND" }}\n                            </td>\n                        </tr>\n                    ($ endforelse $)\n                </tbody>\n            </table>\n        </div>\n        ($ if @props.download $)\n            <a ref="download" part="download" download />\n        ($ endif $)\n        ($ if @props.print $)\n            <iframe ref="print" part="print" />\n            <html ref="page" part="page" lang="{{ @props.locale }}" dir="{{ @props.locale === \'ar\' ? \'rtl\' : \'ltr\' }}">\n                <head>\n                    <meta charset="UTF-8"/>\n                    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>\n                    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>\n                    <style>\n                        @page {\n                            size: {{ @props.size }};\n                            margin: {{ @props.margin }};\n                        }\n                        \n                        body { \n                            margin: 0;\n                        }\n\n                        [part="print-page"] {\n                            width: 100%\n                        }\n\n                        ($ if @truty(@props.title, [""]) $)\n                            [part="print-title"] {\n                                font-weight: 700;\n                                text-align: center;\n                                margin: 0 0 1rem 0;\n                                font-size: {{  @theme.fonts.sizes("XLARGE") }};\n                                line-height: {{  @theme.fonts.lines("XLARGE") }};\n                            }\n                        ($ endif $)\n\n                        [part="print-wrapper"] {\n                            width: 100%;\n                            border-width: 1px;\n                            border-style: solid;\n                            border-radius: .25rem; \n                            background: {{ @theme.colors("OS-WHITE") }};\n                            border-color: {{ @theme.colors("OS-SHADE") }};\n                        }\n\n                        [part="print-table"] {\n                            width: 100%;\n                            border-collapse: collapse;\n                        }\n\n                        [part="print-table-head-col"],\n                        [part="print-table-body-col"],\n                        [part="print-table-empty-col"] {\n                            padding: .5rem 1rem;\n                            color: {{ @theme.colors("OS-BLACK") }};\n                        }\n\n                        [part="print-table-head-col"]:first-of-type,\n                        [part="print-table-body-col"]:first-of-type {\n                            padding-inline-start: 2rem;\n                        }\n\n                        [part="print-table-head-col"]:last-of-type,\n                        [part="print-table-body-col"]:last-of-type {\n                            padding-inline-end: 2rem;\n                        }\n\n                        [part="print-table-head-col"] {\n                            font-weight: 700;\n                            font-size: {{  @theme.fonts.sizes("SMALL") }};\n                            line-height: {{  @theme.fonts.lines("SMALL") }};\n                        }\n\n                        [part="print-table-body-row"] {\n                            border-top-width: 1px;\n                            border-top-style: solid;\n                            border-top-color: {{ @theme.colors("OS-SHADE") }};\n                        }\n\n                        [part="print-table-body-col"] {\n                            font-size: {{  @theme.fonts.sizes("BASE") }};\n                            line-height: {{  @theme.fonts.lines("BASE") }};\n                        }\n\n                        [part="print-table-empty-col"] {\n                            font-weight: 700;\n                            padding: 1rem 2rem;\n                            font-size: {{  @theme.fonts.sizes("BASE") }};\n                            line-height: {{  @theme.fonts.lines("BASE") }};\n                        }\n                    </style>\n                </head>\n                <body>\n                    <table part="print-page">\n                        <thead>\n                            <tr>\n                                <td>\n                                    <div part="print-head">\n                                        <slot name="print-header" />\n                                    </div>\n                                </td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <main part="print-main">\n                                        <slot name="print-main-start" />\n                                        ($ if @truty(@props.title, [""]) $)\n                                            <h1 part="print-title">{{ @props.title }}</h1>\n                                        ($ endif $)\n                                        <div part="print-wrapper">\n                                            <table part="print-table">\n                                                <thead part="print-table-head">\n                                                    <tr part="print-table-head-row">\n                                                        ($ each col into @props.cols $)\n                                                            ($ if col.visible !== false $)\n                                                                <td part="print-table-head-col">\n                                                                    {{ col.text || col.name }}\n                                                                </td>\n                                                            ($ endif $)\n                                                        ($ endeach $)\n                                                    </tr>\n                                                </thead>\n                                                <tbody part="print-table-body">\n                                                    ($ forelse row into @props.rows $)\n                                                        <tr part="print-table-body-row">\n                                                            ($ each col into @props.cols $)\n                                                                ($ if col.visible !== false $)\n                                                                    <td part="print-table-body-col">\n                                                                        {{> col.render ? col.render(row) : row[col.name] }}\n                                                                    </td>\n                                                                ($ endif $)\n                                                            ($ endeach $)\n                                                        </tr>\n                                                    ($ empty $)\n                                                        <tr part="print-table-empty-row">\n                                                            <td part="print-table-empty-col">\n                                                                {{ "NO DATA FOUND" }}\n                                                            </td>\n                                                        </tr>\n                                                    ($ endforelse $)\n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        <slot name="print-main-end" />\n                                    </main>\n                                </td>\n                            </tr>\n                        </tbody>\n                        <tfoot>\n                            <tr>\n                                <td>\n                                    <div part="print-footer">\n                                        <slot name="print-footer" />\n                                    </div>\n                                </td>\n                            </tr>\n                        </tfoot>\n                    </table>\n                </body>\n            </html>\n        ($ endif $)\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        @keyframes opacity-off {\n            0% { opacity: 1; }\n            100% { opacity: 0; }\n        }\n\n        @keyframes slide-off {\n            0% { transform: translateY(0px); }\n            100% { transform: translateY(20px); }\n        }\n\n        @keyframes opacity-on {\n            0% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n\n        @keyframes slide-on {\n            0% { transform: translateY(20px); }\n            100% { transform: translateY(0px); }\n        }\n\n        :host {\n            width: 100%;\n            display: block;\n        }\n\n        ($ if @truty(@props.title, [""]) || @props.print || @props.search || @props.filter || @props.download || @this.querySelector("[slot=tools-start]") || @this.querySelector("[slot=tools-end]") $)\n            [part="topbar"] {\n                gap: .5rem;\n                width: 100%;\n                display: flex;\n                margin-bottom: .5rem;\n                flex-direction: column;\n            }\n        ($ endif $)\n\n        ($ if @truty(@props.title, [""]) $)\n            [part="title"] {\n                margin: 0 auto;\n                font-weight: 700;\n                font-size: {{  @theme.fonts.sizes("XLARGE") }};\n                line-height: {{  @theme.fonts.lines("XLARGE") }};\n            }\n        ($ endif $)\n\n        ($ if @props.search $)\n            [part="search"] {\n                width: 100%;\n                display: block;\n                border-width: 1px;\n                border-style: solid;\n                padding: .5rem 1rem;\n                border-radius: .25rem;\n                ($ if @props.search && @state.search $)\n                    order: 2;\n                ($ endif $)\n                color: {{ @theme.colors("OS-BLACK") }};\n                background: {{ @theme.colors("OS-LIGHT") }};\n                border-color: {{ @theme.colors("OS-SHADE") }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n            }\n    \n            [part="search"]:focus,\n            [part="search"]:focus-within {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        ($ if @props.print || @props.search || @props.filter || @props.download || @this.querySelector("[slot=tools-start]") || @this.querySelector("[slot=tools-end]") $)\n            [part="tools"] {\n                display: flex;\n                margin: 0 auto;\n                max-width: 100%;\n                width: max-content;\n            }\n\n            [part="btn"] {\n                outline: none;\n                border: unset;\n                display: block;\n                padding: .5rem;\n                cursor: pointer;\n                border-radius: .25rem;\n                background: transparent;\n            }\n\n            [part="btn"]:hover,\n            [part="btn"]:focus,\n            [part="btn"]:focus-within {\n                background: {{ @theme.colors("OS-SHADE", 40) }};\n            }\n\n            [part="icon"] {\n                width: 1.5rem;\n                height: 1.5rem;\n                display: block;\n                pointer-events: none;\n                color: {{ @theme.colors("OS-BLACK") }};\n            }\n        ($ endif $)            \n        \n        ($ if @state.search $)\n            [part="btn"][search] [part="icon"] {\n                color: {{ @theme.colors("OS-PRIME") }};\n            }\n        ($ endif $)\n\n        ($ if @props.filter $)\n            [part="dropdown"] {\n                display: block;\n                position: relative;\n                width: max-content;\n            }\n        ($ endif $)\n\n        ($ if @state.show $)\n            ::-webkit-scrollbar {\n                -webkit-appearance: none;\n                background: transparent;\n                -moz-appearance: none;\n                appearance: none;\n                height: 5px;\n                width: 5px;\n            }\n            \n            ::-webkit-scrollbar-track {\n                background: transparent;\n            }\n            \n            ::-webkit-scrollbar-thumb {\n                border-radius: 2px; \n                background: {{ @theme.colors("GRAY", 300) }};\n            }\n            \n            ::-webkit-scrollbar-thumb:hover {\n                background: {{ @theme.colors("GRAY", 400) }};\n            }\n\n            [part="modal"] {\n                inset: 0;\n                width: 100%;\n                display: flex;\n                height: 100dvh;\n                position: fixed;\n                align-items: end;\n                justify-content: center;\n                backdrop-filter: blur(5px);\n                ($ if !@state.expand $)\n                    pointer-events: none;\n                ($ endif $)\n                z-index: {{ @theme.layer() }};\n                background: {{ @theme.colors("OS-BLACK", 10) }};\n                animation: opacity-{{ @state.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            [part="content"] {\n                width: 100%;\n                outline: none;\n                display: flex;\n                overflow: hidden;\n                max-height: 90dvh; \n                border-radius: .25rem;\n                flex-direction: column;\n                background: {{ @theme.colors("OS-WHITE") }};\n                box-shadow: {{ @theme.colors("OS-BLACK", 20) }} 0px 2px 12px;\n                animation: slide-{{ @state.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            [part="label"] {\n                width: 100%;\n                display: block;\n                padding: .65rem;\n                font-weight: 700;\n                text-align: center;\n                border-bottom-width: 1px;\n                border-bottom-style: solid;\n                color: {{ @theme.colors("OS-BLACK") }};\n                font-size: {{  @theme.fonts.sizes("SMALL") }};\n                line-height: {{  @theme.fonts.lines("SMALL") }};\n                border-bottom-color: {{ @theme.colors("OS-SHADE") }};\n            }\n\n            [part="items"] {\n                flex: 1;\n                width: 100%;\n                display: flex;\n                padding: 1rem;\n                overflow: overlay;\n                flex-direction: column; \n            }\n\n            [part="item"] {\n                gap: .5rem;\n                width: 100%;\n                display: flex;\n                flex-wrap: wrap;\n                align-items: center;\n            }\n\n            [part="checkbox"] {\n                width: 1.2rem;\n                height: 1.2rem;\n                border-width: 1px;\n                border-style: solid;\n                border-radius: .25rem; \n                accent-color: {{ @theme.colors("OS-PRIME") }};\n                border-color: {{ @theme.colors("OS-BLACK") }};\n            }\n\n            [part="checkbox"]:focus,\n            [part="checkbox"]:focus-within {\n                outline-width: 1px;\n                outline-style: solid;\n                outline-color: {{ @theme.colors("OS-PRIME") }};\n            }\n\n            [part="text"] {\n                font-weight: 700;\n                color: {{  @theme.colors("OS-BLACK") }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n            }\n        ($ endif $)\n\n        [part="wrapper"] {\n            width: 100%;\n            overflow-x: auto;\n            border-width: 1px;\n            border-style: solid;\n            border-radius: .25rem; \n            background: {{ @theme.colors("OS-WHITE") }};\n            border-color: {{ @theme.colors("OS-SHADE") }};\n        }\n\n        [part="table"] {\n            min-width: 100%;\n            width: max-content;\n            border-collapse: collapse;\n        }\n\n        [part="table-head-col"],\n        [part="table-body-col"],\n        [part="table-empty-col"] {\n            padding: .5rem 1rem;\n            color: {{ @theme.colors("OS-BLACK") }};\n        }\n\n        [part="table-head-col"]:first-of-type,\n        [part="table-body-col"]:first-of-type {\n            padding-inline-start: 2rem;\n        }\n\n        [part="table-head-col"]:last-of-type,\n        [part="table-body-col"]:last-of-type {\n            padding-inline-end: 2rem;\n        }\n\n        [part="table-head-col"] {\n            font-weight: 700;\n            font-size: {{  @theme.fonts.sizes("SMALL") }};\n            line-height: {{  @theme.fonts.lines("SMALL") }};\n        }\n\n        [part="table-body-row"] {\n            border-top-width: 1px;\n            border-top-style: solid;\n            border-top-color: {{ @theme.colors("OS-SHADE") }};\n        }\n\n        [part="table-body-col"] {\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n        }\n\n        [part="table-empty-col"] {\n            font-weight: 700;\n            padding: 1rem 2rem;\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n        }\n\n        ($ if @props.print $)\n            [part="page"],\n            [part="print"] {\n                display: none;\n            }\n        ($ endif $)\n\n        ($ if @props.download $)\n            [part="download"] {\n                display: none;\n            }\n        ($ endif $)\n\n        @media (min-width: 1024px) {\n            ($ if @truty(@props.title, [""]) || @props.print || @props.search || @props.filter || @props.download || @this.querySelector("[slot=tools-start]") || @this.querySelector("[slot=tools-end]") $)\n                [part="topbar"] {\n                    gap: 1rem;\n                    flex-direction: row;\n                    align-items: center;\n                }\n            ($ endif $)\n\n            ($ if @truty(@props.title, [""]) $)\n                [part="title"] {\n                    margin: 0;\n                }\n            ($ endif $)\n\n            ($ if @props.search $)\n                [part="search"] {\n                    order: 0;\n                    width: 300px;\n                }\n            ($ endif $)\n\n            ($ if @state.show $)\n                [part="modal"] {\n                    inset: auto;\n                    max-width: 400px;\n                    width: max-content;\n                    position: absolute;\n                    height: max-content;\n                    background: transparent;\n                    {{ @state.pos ? "bottom" : "top" }}: 0;\n                    ($ if @props.locale === "rtl" $)\n                        left: 0;\n                    ($ else $)\n                        right: 0;\n                    ($ endif $)\n                }\n\n                [part="content"] {\n                    max-height: 300px;\n                }\n\n                [part="label"] {\n                    display: none;\n                }\n\n                [part="items"] {\n                    padding: .5rem;\n                }\n            ($ endif $)\n\n            ($ if @props.print || @props.search || @props.filter || @props.download || @this.querySelector("[slot=tools-start]") || @this.querySelector("[slot=tools-end]") $)\n                [part="tools"] {\n                    margin-inline-end: 0;\n                    margin-inline-start: auto;\n                }\n            ($ endif $)\n        }\n    '] })({ attrs: ["title", "margin", "size", "print", "locale", "search", "filter", "download"], props: { title: "", margin: "5mm 5mm 5mm 5mm", size: "A4", download: !1, search: !1, filter: !1, print: !1, cols: [], rows: [], locale: document.documentElement.lang }, state: { locales: OS.$Locales, expand: !1, show: !1, pos: null, search: !1, iframe: null }, rules: { print() { const e = document.createElement("div");
            e.innerHTML = this.refs.page.outerHTML, ["print-header", "print-main-start", "print-main-end", "print-footer"].map((t => { const n = this.querySelector(`[slot=${t}]`);
                n && e.querySelector(`[name=${t}]`).insertAdjacentHTML("afterend", n.innerHTML) })), this.state.iframe.open(), this.state.iframe.write(e.innerHTML), this.state.iframe.close(); const t = window.scrollY;
            this.refs.print.contentWindow.print(), window.scroll(0, t), this.emit("print") }, search(e) { const t = e.target.value.toUpperCase().trim().split(" ");
            this.emit("search", { data: t }, (() => {
                [...this.refs.tablebodyrow || []].map((e => { const n = e.innerText.toUpperCase().trim(),
                        s = []; for (const e of t) n.includes(e) ? s.push(1) : s.push(0);
                    s.includes(1) ? e.style.display = "" : e.style.display = "none" })) })) }, filter() { this.state.expand = !this.state.expand }, toggle() { this.state.search = !this.state.search, this.rules.clear(), this.state.search && this.refs.search.focus() }, download() { const e = [];
            this.props.cols.forEach((t => {!1 !== t.visible && e.push(this.rules.parse(t.text || t.name)) })); const t = [e.join(",")];
            this.props.rows.forEach((e => { const n = [];
                this.props.cols.forEach((t => {!1 !== t.visible && n.push(this.rules.parse(e[t.name])) })), t.push(n.join(",")) })), this.refs.download.href = URL.createObjectURL(new Blob([t.join("\n")], { type: "text/csv" })), this.refs.download.click(), this.emit("download") }, parse: e => (e = e.replace(/"/g, '""'), /[",\n]/.test(e) && (e = `"${e}"`), e), clear() {
            [...this.refs.tablebodyrow || []].map((e => { e.style.display = "" })) }, blur(e) {!this.refs.content.contains(e.target) && this.state.expand && this.rules.filter({ type: "click" }) }, pos() { this.state.show && (this.state.pos = window.innerHeight - this.getBoundingClientRect().top < this.refs.modal.clientHeight) }, change(e) { const t = e.target.dataset.for;
            this.props.cols = this.props.cols.map((e => (e.name === t && (e.visible = !(!1 !== e.visible)), e))) } }, setup: { mounted() { window.addEventListener("scroll", this.rules.pos) }, removed() { window.removeEventListener("click", this.rules.blur), window.removeEventListener("scroll", this.rules.pos) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "size":
                case "title":
                case "margin":
                    this.props[e] = n; break;
                case "print":
                case "locale":
                case "search":
                case "filter":
                case "download":
                    this.props[e] = this.truty(n) }
            if ("state" === s) switch (e) {
                case "show":
                    OS.$Wrapper && OS.$Wrapper.rules.toggle(), setTimeout((() => { window[(n ? "add" : "remove") + "EventListener"]("click", this.rules.blur) }), 0), this.emit("change:expand", { data: n }); break;
                case "expand":
                    n ? (this.state.show = n, this.rules.pos()) : setTimeout((() => { this.state.show = n }), 250) }
            if ("props" === s) switch (this.setter(e, n, ["title", "size", "margin", "print", "locale", "search", "filter", "download"]), e) {
                case "size":
                case "margin":
                case "locale":
                case "download":
                    this.emit("change:" + e, { data: n }); break;
                case "filter":
                    this.state.expand = !1, this.emit("change:" + e, { data: n }); break;
                case "search":
                    this.rules.clear(), this.state.search = !1, this.emit("change:" + e, { data: n }); break;
                case "print":
                    n && (this.state.iframe = this.refs.print.contentDocument || this.refs.print.contentWindow.document), this.emit("change:" + e, { data: n }) } } } }), OS.$Component.Filter = OS.$Component({ tag: OS.$Selectors.Filter, tpl: '\n        <slot name="start" />\n        <svg ref="icon" part="icon" fill="currentColor" viewBox="0 0 48 48">\n            <path d="M39.7 43.2L26.2894 29.8C25.2965 30.5641 24.1591 31.1635 22.8771 31.5981C21.5951 32.0327 20.1934 32.25 18.6719 32.25C14.8282 32.25 11.597 30.9383 8.9782 28.3149C6.35943 25.6914 5.05005 22.4998 5.05005 18.7399C5.05005 14.98 6.36177 11.7917 8.9852 9.175C11.6086 6.55833 14.8003 5.25 18.5602 5.25C22.3201 5.25 25.5084 6.56073 28.125 9.1822C30.7417 11.8037 32.05 14.9954 32.05 18.7575C32.05 20.2858 31.8334 21.675 31.4 22.925C30.9667 24.175 30.3334 25.3667 29.5 26.5L43 39.9L39.7 43.2ZM18.5721 27.7C21.1049 27.7 23.2261 26.841 24.9357 25.1229C26.6453 23.4049 27.5 21.2874 27.5 18.7706C27.5 16.2538 26.6443 14.1295 24.9327 12.3977C23.2212 10.6659 21.1025 9.8 18.5765 9.8C16.0228 9.8 13.8882 10.6659 12.1729 12.3977C10.4577 14.1295 9.60005 16.2538 9.60005 18.7706C9.60005 21.2874 10.4552 23.4049 12.1656 25.1229C13.876 26.841 16.0115 27.7 18.5721 27.7Z" />\n        </svg>\n        <div ref="wrapper" part="wrapper">\n            ($ set uid = "uid_" + @random() $)\n            ($ if @truty(@props.label, [""]) $)\n                <label ref="label" part="label" for="{{ uid }}">{{> @props.label }}</label>\n            ($ endif $)\n            <input ref="field" part="field" id="{{ uid }}" \n                @keypress="{{ @rules.keypress }}" \n                @keydown="{{ @rules.keydown }}" \n                @change="{{ @rules.change }}" \n                @keyup="{{ @rules.keyup }}" \n                @input="{{ @rules.search }}" \n                @focus="{{ @rules.focus }}" \n                @blur="{{ @rules.blur }}" \n                type="search" \n                ($ if @truty(@props.placeholder, [""]) $)\n                    placeholder="{{ @props.placeholder }}"\n                ($ else $)\n                    placeholder=" "\n                ($ endif $)\n                ($ if @props.disabled $)\n                    disabled="{{ @props.disabled }}"\n                ($ endif $) \n            />\n        </div>\n        <slot name="end" />\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        ::-webkit-search-cancel-button,\n        ::-webkit-inner-spin-button,\n        ::-webkit-outer-spin-button {\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            display: none;\n        }\n        \n        input {\n            -webkit-appearance: textfield;\n            -moz-appearance: textfield;\n            appearance: textfield;\n        }      \n\n        :host {\n            gap: .5rem;\n            width: 100%;\n            display: flex;\n            flex-wrap: wrap;\n            border-width: 1px;\n            align-items: center;\n            border-style: solid;\n            border-radius: .25rem;\n            padding: .35rem .75rem;\n            background: {{ @theme.colors("OS-LIGHT") }};\n            border-color: {{ @theme.colors("OS-SHADE") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus),\n            :host(:focus-within) {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        [part="wrapper"] {\n            flex: 1;\n            width: 0%;\n            display: flex;\n            position: relative;\n            flex-direction: column;\n        }\n\n        ($ if @truty(@props.label, [""]) $)\n            [part="label"] {\n                width: 100%;\n                display: flex;\n                overflow: hidden;\n                font-weight: 600;\n                inset: 0 0 auto 0;  \n                position: absolute; \n                padding: .5rem 0;\n                white-space: nowrap;\n                pointer-events: none;\n                flex-direction: column;\n                text-overflow: ellipsis;\n                justify-content: center;\n                color: {{ @theme.colors("OS-BLACK", 50) }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n                transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -moz-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -webkit-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n            }\n\n            [part="label"]:has(+ [part="field"]:not(:placeholder-shown)),\n            [part="label"]:has(+ [part="field"]:focus) {\n                padding: 0;\n                color: {{ @theme.colors("OS-BLACK", 80) }};\n                font-size: {{  @theme.fonts.sizes("XSMALL") }};\n                line-height: {{  @theme.fonts.lines("XSMALL") }};\n            }\n        ($ endif $)\n\n        [part="field"] {\n            padding: 0;\n            width: 100%;\n            outline: none;\n            border: unset;\n            display: block;\n            background: transparent;\n            color: {{ @theme.colors("OS-BLACK") }};\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n            padding: {{ @truty(@props.label, [""]) ? "1rem 0 0 0" : ".5rem 0" }};\n        }\n\n        [part="icon"] {\n            width: 1.2rem;\n            height: 1.2rem;\n            display: block;\n            pointer-events: none;\n            color: {{ @theme.colors("OS-BLACK") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus) [part="icon"],\n            :host(:focus-within) [part="icon"] {\n                color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n    '] })({ attrs: ["label", "target", "disabled", "placeholder"], props: { label: "", value: "", target: "", disabled: !1, placeholder: "" }, rules: { focus() { this.emit("focus", { data: this.props.value }) }, blur() { this.emit("blur", { data: this.props.value }) }, change() { this.emit("change", { data: this.props.value }) }, keyup() { this.emit("keyup", { data: this.props.value }) }, keydown() { this.emit("keydown", { data: this.props.value }) }, keypress() { this.emit("keypress", { data: this.props.value }) }, search(e) { this.props.value = e.target.value; const t = e.target.value.toUpperCase().trim().split(" ");
            this.emit("search", { data: this.props.value }, (function() { this.truty(this.props.target, [""]) && [...document.querySelectorAll(this.props.target)].map((e => { const n = e.innerText.toUpperCase().trim(),
                        s = []; for (const e of t) n.includes(e) ? s.push(1) : s.push(0);
                    s.includes(1) ? e.style.display = "" : e.style.display = "none" })) })) } }, setup: { created() { this.reset = function() { document.querySelectorAll(this.props.target).forEach((e => e.style.display = "")), this.props.value = "", this.emit("reset") }, this.focus = function() { this.refs.field.focus() }, this.blur = function() { this.refs.field.blur() } }, mounted() { this.hasAttribute("value") && (this.props.value = this.getAttribute("value"), this.removeAttribute("value")) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "label":
                case "target":
                case "placeholder":
                    this.props[e] = n; break;
                case "disabled":
                    this.props.disabled = this.truty(n) }
            if ("props" === s) switch (this.setter(e, n, ["label", "target", "disabled", "placeholder"]), e) {
                case "label":
                case "target":
                case "disabled":
                case "placeholder":
                    this.emit("change:" + e, { data: n }); break;
                case "value":
                    this.refs.field.value = n } } } }), OS.$Component.Switch = OS.$Component({ tag: OS.$Selectors.Switch, tpl: '\n        <div ref="field" part="field" tabindex="{{ @props.disabled ? -1 : 0 }}">\n            <div ref="ground" part="ground">    \n                <div ref="scroll" part="scroll">\n                    <span ref="toggle" part="toggle" />\n                </div>\n            </div>\n        </div>\n        <slot />\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        :host {\n            gap: .5rem;\n            flex-wrap: wrap;\n            align-items: center;\n            display: inline-flex;\n        }\n\n        [part="field"] {\n            width: 2.5rem;\n            height: 1.5rem;\n            display: flex;\n            cursor: pointer;\n            ($ if !@props.disabled $)\n                align-items: center;\n            ($ endif $)\n        }\n\n        ($ if !@props.disabled $)\n            [part="field"]:focus,\n            [part="field"]:focus-within {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        [part="ground"] {\n            width: 100%;\n            height: .85rem;\n            aspect-ratio: 2/1;\n            border-width: 1px;\n            border-style: solid;\n            border-radius: 1rem;    \n            transition: 200ms ease-in-out background; \n            -moz-transition: 200ms ease-in-out background; \n            border-color: {{ @theme.colors("OS-SHADE") }};\n            -webkit-transition: 200ms ease-in-out background;\n            cursor: {{ @props.disabled ? "default" : "pointer" }};\n            background: {{ @theme.colors(@props.checked ? "OS-PRIME" : "OS-LIGHT") }};\n        }\n\n        [part="scroll"] {\n            height: 100%;\n            display: flex;\n            align-items: center;\n            width: calc(100% + 2px);\n            margin-inline-end: -1px;\n            margin-inline-start: -1px;\n        }\n\n        [part="toggle"] {\n            width: 1.5rem;\n            height: 1.5rem;\n            border-width: 1px;\n            border-style: solid;\n            border-radius: 1rem;\n            transition: 200ms ease-in-out margin; \n            -moz-transition: 200ms ease-in-out margin; \n            -webkit-transition: 200ms ease-in-out margin;\n            background: {{ @theme.colors("OS-WHITE") }};\n            border-color: {{ @theme.colors("OS-SHADE") }};\n            margin-inline-start: {{ @props.checked ? @refs.scroll.clientWidth - @refs.toggle.clientWidth - 2 : 0 }}px;\n        }\n    '], ctl: !0 })({ attrs: ["value", "group", "checked", "disabled"], props: { value: "", group: "", checked: !1, disabled: !1 }, rules: { change(e) { "click" !== e.type && 13 !== e.keyCode || this.props.disabled || (this.props.checked = !(!this.props.group.length || !this.props.checked) || !this.props.checked) } }, setup: { created() { this.reset = function() { this.props.checked = !1, this.emit("reset") }, this.focus = function() { this.refs.field.focus() }, this.blur = function() { this.refs.field.blur() } }, mounted() { this.addEventListener("click", this.rules.change), this.addEventListener("keydown", this.rules.change), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, removed() { this.removeEventListener("click", this.rules.change), this.removeEventListener("keydown", this.rules.change), this.ctl.form.removeEventListener("reset", this.reset.bind(this)) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "value":
                case "group":
                    this.props[e] = n; break;
                case "checked":
                case "disabled":
                    this.props[e] = this.truty(n) }
            if ("props" === s) switch (this.setter(e, n, ["value", "group", "checked", "disabled"]), e) {
                case "value":
                case "group":
                case "disabled":
                    this.emit("change:" + e, { data: n }); break;
                case "checked":
                    n && this.props.group.length && document.querySelectorAll(this.tagName.toLowerCase() + "[group=" + this.props.group + "]").forEach((e => { this !== e && (e.checked = !1) })), this.ctl.setFormValue(n ? this.props.value : null), this.emit("change", { data: n }) } } } }), OS.$Component.Text = OS.$Component({ tag: OS.$Selectors.Text, tpl: '\n        <slot name="start" />\n        <div ref="wrapper" part="wrapper">\n            ($ set uid = "uid_" + @random() $)\n            ($ if @truty(@props.label, [""]) $)\n                <label ref="label" part="label" for="{{ uid }}">{{> @props.label }}</label>\n            ($ endif $)\n            <input ref="field" part="field" id="{{ uid }}" \n                @keypress="{{ @rules.keypress }}" \n                @keydown="{{ @rules.keydown }}" \n                @change="{{ @rules.change }}" \n                @keyup="{{ @rules.keyup }}" \n                @input="{{ @rules.input }}" \n                @focus="{{ @rules.focus }}" \n                @blur="{{ @rules.blur }}" \n                type="{{ @props.type }}" \n                ($ if @truty(@props.placeholder, [""]) $)\n                    placeholder="{{ @props.placeholder }}"\n                ($ else $)\n                    placeholder=" "\n                ($ endif $)\n                ($ if @props.disabled $)\n                    disabled="{{ @props.disabled }}"\n                ($ endif $)\n            />\n        </div>\n        <slot name="end" />\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        ::-webkit-search-cancel-button,\n        ::-webkit-inner-spin-button,\n        ::-webkit-outer-spin-button {\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            display: none;\n        }\n        \n        input {\n            -webkit-appearance: textfield;\n            -moz-appearance: textfield;\n            appearance: textfield;\n        }      \n\n        ($ if @props.type === "hidden" $)\n            :host {\n                display: none;\n            }\n        ($ else $)\n            :host {\n                gap: .5rem;\n                width: 100%;\n                display: flex;\n                flex-wrap: wrap;\n                border-width: 1px;\n                align-items: center;\n                border-style: solid;\n                border-radius: .25rem;\n                padding: .35rem .75rem;\n                background: {{ @theme.colors("OS-LIGHT") }};\n                border-color: {{ @theme.colors("OS-SHADE") }};\n            }\n        ($ endif $)\n\n        ($ if !@props.disabled $)\n            :host(:focus),\n            :host(:focus-within) {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        [part="wrapper"] {\n            flex: 1;\n            width: 0%;\n            display: flex;\n            position: relative;\n            flex-direction: column;\n        }\n\n        ($ if @truty(@props.label, [""]) $)\n            [part="label"] {\n                width: 100%;\n                display: flex;\n                overflow: hidden;\n                font-weight: 600;\n                inset: 0 0 auto 0;  \n                position: absolute; \n                padding: .5rem 0;\n                white-space: nowrap;\n                pointer-events: none;\n                flex-direction: column;\n                text-overflow: ellipsis;\n                justify-content: center;\n                color: {{ @theme.colors("OS-BLACK", 50) }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n                transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -moz-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -webkit-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n            }\n\n            [part="label"]:has(+ [part="field"]:not(:placeholder-shown)),\n            [part="label"]:has(+ [part="field"]:focus) {\n                padding: 0;\n                color: {{ @theme.colors("OS-BLACK", 80) }};\n                font-size: {{  @theme.fonts.sizes("XSMALL") }};\n                line-height: {{  @theme.fonts.lines("XSMALL") }};\n            }\n        ($ endif $)\n\n        [part="field"] {\n            padding: 0;\n            width: 100%;\n            outline: none;\n            border: unset;\n            display: block;\n            background: transparent;\n            color: {{ @theme.colors("OS-BLACK") }};\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n            padding: {{ @truty(@props.label, [""]) ? "1rem 0 0 0" : ".5rem 0" }};\n        }\n    '], ctl: !0 })({ attrs: ["type", "label", "disabled", "placeholder"], props: { label: "", value: "", type: "text", disabled: !1, placeholder: "" }, rules: { focus() { this.emit("focus", { data: this.props.value }) }, blur() { this.emit("blur", { data: this.props.value }) }, change() { this.emit("change", { data: this.props.value }) }, input(e) { this.props.value = e.target.value, this.emit("input", { data: this.props.value }) }, keyup() { this.emit("keyup", { data: this.props.value }) }, keydown() { this.emit("keydown", { data: this.props.value }) }, keypress() { this.emit("keypress", { data: this.props.value }) } }, setup: { created() { this.reset = function() { this.props.value = "", this.emit("reset") }, this.focus = function() { this.refs.field.focus() }, this.blur = function() { this.refs.field.blur() } }, mounted() { this.hasAttribute("value") && (this.props.value = this.getAttribute("value"), this.removeAttribute("value")), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, removed() { this.ctl.form.removeEventListener("reset", this.reset.bind(this)) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "type":
                case "label":
                case "placeholder":
                    this.props[e] = n; break;
                case "disabled":
                    this.props.disabled = this.truty(n) }
            if ("props" === s) switch (this.setter(e, n, ["type", "label", "disabled", "placeholder"]), e) {
                case "type":
                case "label":
                case "disabled":
                case "placeholder":
                    this.emit("change:" + e, { data: n }); break;
                case "value":
                    this.refs.field.value = n, this.ctl.setFormValue(n || null) } } } }), OS.$Component.Password = OS.$Component({ tag: OS.$Selectors.Password, tpl: '\n        <slot name="start" />\n        <div ref="wrapper" part="wrapper">\n            ($ set uid = "uid_" + @random() $)\n            ($ if @truty(@props.label, [""]) $)\n                <label ref="label" part="label" for="{{ uid }}">{{> @props.label }}</label>\n            ($ endif $)\n            <input ref="field" part="field" id="{{ uid }}" \n                @keypress="{{ @rules.keypress }}" \n                @keydown="{{ @rules.keydown }}" \n                @change="{{ @rules.change }}" \n                @keyup="{{ @rules.keyup }}" \n                @input="{{ @rules.input }}" \n                @focus="{{ @rules.focus }}" \n                @blur="{{ @rules.blur }}" \n                type="{{ @state.type }}" \n                ($ if @truty(@props.placeholder, [""]) $)\n                    placeholder="{{ @props.placeholder }}"\n                ($ else $)\n                    placeholder=" "\n                ($ endif $)\n                ($ if @props.disabled $)\n                    disabled="{{ @props.disabled }}"\n                ($ endif $)\n            />\n        </div>\n        <button ref="trigger" part="trigger"\n            role="trigger" type="button" \n            @click="{{ @rules.toggle }}" \n            ($ if @props.disabled $)\n                disabled="{{ @props.disabled }}"\n            ($ endif $)\n        >\n            <svg ref="icon" part="icon" fill="currentColor" viewBox="0 0 48 48">\n                <path d="M24.0147 31.35C26.3382 31.35 28.3083 30.5368 29.925 28.9103C31.5416 27.2838 32.35 25.3088 32.35 22.9853C32.35 20.6618 31.5367 18.6917 29.9103 17.075C28.2838 15.4583 26.3088 14.65 23.9853 14.65C21.6617 14.65 19.6916 15.4632 18.075 17.0897C16.4583 18.7162 15.65 20.6912 15.65 23.0147C15.65 25.3382 16.4632 27.3083 18.0897 28.925C19.7161 30.5417 21.6911 31.35 24.0147 31.35ZM23.9941 27.8C22.6786 27.8 21.5507 27.3279 20.6104 26.3837C19.6701 25.4395 19.2 24.3096 19.2 22.9941C19.2 21.6786 19.6721 20.5507 20.6163 19.6104C21.5605 18.6701 22.6903 18.2 24.0059 18.2C25.3214 18.2 26.4493 18.6721 27.3896 19.6163C28.3298 20.5605 28.8 21.6904 28.8 23.0059C28.8 24.3214 28.3279 25.4493 27.3837 26.3896C26.4395 27.3299 25.3096 27.8 23.9941 27.8ZM24 39C19.3666 39 15.1508 37.7221 11.3525 35.1662C7.5542 32.6104 4.53668 29.2883 2.29995 25.2C2.09995 24.8695 1.94995 24.5092 1.84995 24.1191C1.74995 23.729 1.69995 23.3576 1.69995 23.0049C1.69995 22.6522 1.74995 22.2805 1.84995 21.8897C1.94995 21.4989 2.09995 21.119 2.29995 20.75C4.53668 16.695 7.5542 13.3896 11.3525 10.8338C15.1508 8.27793 19.3666 7 24 7C28.6333 7 32.8491 8.27793 36.6474 10.8338C40.4457 13.3896 43.4632 16.695 45.7 20.75C45.9 21.1139 46.05 21.4908 46.15 21.8809C46.25 22.271 46.3 22.6424 46.3 22.9951C46.3 23.3478 46.25 23.7195 46.15 24.1103C46.05 24.5011 45.9 24.8643 45.7 25.2C43.4632 29.2883 40.4457 32.6104 36.6474 35.1662C32.8491 37.7221 28.6333 39 24 39Z" />\n                <path d="M40.3 44.9996L32.65 37.4496C31.2833 38.0163 29.875 38.4163 28.425 38.6496C26.975 38.8829 25.5 38.9996 24 38.9996C19.3666 38.9996 15.1333 37.7246 11.3 35.1746C7.46662 32.6246 4.43328 29.2996 2.19995 25.1996C1.99995 24.8663 1.86662 24.5079 1.79995 24.1246C1.73328 23.7413 1.69995 23.3663 1.69995 22.9996C1.69995 22.6329 1.73328 22.2579 1.79995 21.8746C1.86662 21.4913 1.99995 21.1329 2.19995 20.7996C2.99995 19.3663 3.88328 17.9663 4.84995 16.5996C5.81662 15.2329 6.91662 13.9829 8.14995 12.8496L1.99995 6.84961L4.39995 4.34961L42.55 42.4996L40.3 44.9996ZM24 31.3496C24.4 31.3496 24.775 31.3079 25.125 31.2246C25.475 31.1413 25.85 31.0329 26.25 30.8996L16 20.7496C15.8666 21.1496 15.775 21.5246 15.725 21.8746C15.675 22.2246 15.65 22.5996 15.65 22.9996C15.65 25.3329 16.4583 27.3079 18.075 28.9246C19.6916 30.5413 21.6666 31.3496 24 31.3496ZM39 33.7496L31.55 26.2996C31.8833 25.8663 32.1 25.3579 32.2 24.7746C32.3 24.1913 32.35 23.5996 32.35 22.9996C32.35 20.6663 31.5416 18.6913 29.925 17.0746C28.3083 15.4579 26.3333 14.6496 24 14.6496C23.4 14.6496 22.8166 14.7079 22.25 14.8246C21.6833 14.9413 21.1666 15.1329 20.7 15.3996L14.3 8.94961C15.8666 8.24961 17.4916 7.74961 19.175 7.44961C20.8583 7.14961 22.55 6.99961 24.25 6.99961C28.8833 6.99961 33.0916 8.29128 36.875 10.8746C40.6583 13.4579 43.65 16.7996 45.85 20.8996C46.05 21.2329 46.1916 21.5746 46.275 21.9246C46.3583 22.2746 46.4 22.6329 46.4 22.9996C46.4 23.3663 46.35 23.7246 46.25 24.0746C46.15 24.4246 46.0166 24.7663 45.85 25.0996C45.0166 26.7329 44.025 28.2996 42.875 29.7996C41.725 31.2996 40.4333 32.6163 39 33.7496ZM27.8 22.4996L24.15 18.8996C24.6833 18.6329 25.225 18.5246 25.775 18.5746C26.325 18.6246 26.8 18.8163 27.2 19.1496C27.6333 19.6163 27.9083 20.1663 28.025 20.7996C28.1416 21.4329 28.0666 21.9996 27.8 22.4996Z" />           \n            </svg>\n        </button>\n        <slot name="end" />\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        ::-webkit-search-cancel-button,\n        ::-webkit-inner-spin-button,\n        ::-webkit-outer-spin-button {\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            display: none;\n        }\n        \n        input {\n            -webkit-appearance: textfield;\n            -moz-appearance: textfield;\n            appearance: textfield;\n        }      \n\n        :host {\n            gap: .5rem;\n            width: 100%;\n            display: flex;\n            flex-wrap: wrap;\n            border-width: 1px;\n            align-items: center;\n            border-style: solid;\n            border-radius: .25rem;\n            padding: .35rem .75rem;\n            background: {{ @theme.colors("OS-LIGHT") }};\n            border-color: {{ @theme.colors("OS-SHADE") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus),\n            :host(:focus-within) {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        [part="wrapper"] {\n            flex: 1;\n            width: 0%;\n            display: flex;\n            position: relative;\n            flex-direction: column;\n        }\n\n        ($ if @truty(@props.label, [""]) $)\n            [part="label"] {\n                width: 100%;\n                display: flex;\n                overflow: hidden;\n                font-weight: 600;\n                inset: 0 0 auto 0;  \n                position: absolute; \n                padding: .5rem 0;\n                white-space: nowrap;\n                pointer-events: none;\n                flex-direction: column;\n                text-overflow: ellipsis;\n                justify-content: center;\n                color: {{ @theme.colors("OS-BLACK", 50) }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n                transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n                -moz-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -webkit-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n            }\n\n            [part="label"]:has(+ [part="field"]:not(:placeholder-shown)),\n            [part="label"]:has(+ [part="field"]:focus) {\n                padding: 0;\n                color: {{ @theme.colors("OS-BLACK", 80) }};\n                font-size: {{  @theme.fonts.sizes("XSMALL") }};\n                line-height: {{  @theme.fonts.lines("XSMALL") }};\n            }\n        ($ endif $)\n\n        [part="field"] {\n            padding: 0;\n            width: 100%;\n            outline: none;\n            border: unset;\n            display: block;\n            background: transparent;\n            color: {{ @theme.colors("OS-BLACK") }};\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n            padding: {{ @truty(@props.label, [""]) ? "1rem 0 0 0" : ".5rem 0" }};\n        }\n        \n        [part="trigger"] {\n            padding: 0;\n            border: unset;\n            width: 1.2rem;\n            height: 1.2rem;\n            cursor: pointer;\n            border-radius: 4px;\n            pointer-events: auto;\n            background: transparent;\n            color: {{ @theme.colors("OS-BLACK") }};\n            ($ if @props.disabled $)\n                cursor: default;\n            ($ endif $)\n        }\n\n        ($ if !@props.disabled $)\n            [part="trigger"]:focus,\n            [part="trigger"]:focus-within {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        [part="icon"] {\n            width: 100%;\n            height: 100%;\n            pointer-events: none;\n        }\n\n        [part="icon"] path:{{ @state.type === "password" ? "last-child" : "first-child" }} {\n            display: none;\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus) [part="icon"],\n            :host(:focus-within) [part="icon"] {\n                color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n    '], ctl: !0 })({ attrs: ["label", "disabled", "placeholder"], props: { label: "", value: "", disabled: !1, placeholder: "" }, state: { type: "password" }, rules: { toggle() { this.state.type = "password" === this.state.type ? "text" : "password" }, focus() { this.emit("focus", { data: this.props.value }) }, blur() { this.emit("blur", { data: this.props.value }) }, change() { this.emit("change", { data: this.props.value }) }, input(e) { this.props.value = e.target.value, this.emit("input", { data: this.props.value }) }, keyup() { this.emit("keyup", { data: this.props.value }) }, keydown() { this.emit("keydown", { data: this.props.value }) }, keypress() { this.emit("keypress", { data: this.props.value }) } }, setup: { created() { this.reset = function() { this.state.type = "password", this.props.value = "", this.emit("reset") }, this.focus = function() { this.refs.field.focus() }, this.blur = function() { this.refs.field.blur() } }, mounted() { this.hasAttribute("value") && (this.props.value = this.getAttribute("value"), this.removeAttribute("value")), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, removed() { this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "label":
                case "placeholder":
                    this.props[e] = n; break;
                case "disabled":
                    this.props.disabled = this.truty(n) }
            if ("state" === s && "type" === e && (["text", "password"].includes(n) ? this.emit("change:toggle", { data: this.state.type }) : this.state.type = "password"), "props" === s) switch (this.setter(e, n, ["label", "disabled", "placeholder"]), e) {
                case "label":
                case "disabled":
                case "placeholder":
                    this.emit("change:" + e, { data: n });
                case "value":
                    this.refs.field.value = n, this.ctl.setFormValue(n || null) } } } }), OS.$Component.Area = OS.$Component({ tag: OS.$Selectors.Area, tpl: '        \n        <slot name="start" />\n        <div ref="wrapper" part="wrapper">\n            ($ set uid = "uid_" + @random() $)\n            ($ if @truty(@props.label, [""]) $)\n                <label ref="label" part="label" for="{{ uid }}">{{> @props.label }}</label>\n            ($ endif $)\n            <textarea ref="field" part="field" id="{{ uid }}" \n                @keypress="{{ @rules.keypress }}" \n                @keydown="{{ @rules.keydown }}" \n                @change="{{ @rules.change }}" \n                @keyup="{{ @rules.keyup }}" \n                @input="{{ @rules.input }}" \n                @focus="{{ @rules.focus }}" \n                @blur="{{ @rules.blur }}" \n                ($ if @truty(@props.placeholder, [""]) $)\n                    placeholder="{{ @props.placeholder }}"\n                ($ else $)\n                    placeholder=" "\n                ($ endif $)\n                ($ if @props.disabled $)\n                    disabled="{{ @props.disabled }}"\n                ($ endif $)\n                rows="{{ @props.rows }}"\n            >\n            </textarea>\n        </div>\n        <slot name="end" />\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        ::-webkit-search-cancel-button,\n        ::-webkit-inner-spin-button,\n        ::-webkit-outer-spin-button {\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            display: none;\n        }\n\n        ::-webkit-scrollbar {\n            -webkit-appearance: none;\n            background: transparent;\n            -moz-appearance: none;\n            appearance: none;\n            display: none;\n            height: 0px;\n            width: 0px;\n        } \n\n        :host {\n            gap: .5rem;\n            width: 100%;\n            display: flex;\n            flex-wrap: wrap;\n            border-width: 1px;\n            align-items: center;\n            border-style: solid;\n            border-radius: .25rem;\n            padding: .35rem .75rem;\n            background: {{ @theme.colors("OS-LIGHT") }};\n            border-color: {{ @theme.colors("OS-SHADE") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus),\n            :host(:focus-within) {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        [part="wrapper"] {\n            flex: 1;\n            width: 0%;\n            display: flex;\n            position: relative;\n            flex-direction: column;\n        }\n        \n        ($ if @truty(@props.label, [""]) $)\n            [part="label"] {\n                width: 100%;\n                display: flex;\n                overflow: hidden;\n                font-weight: 600;\n                inset: 0 0 auto 0;  \n                position: absolute; \n                padding: .5rem 0;\n                white-space: nowrap;\n                pointer-events: none;\n                flex-direction: column;\n                text-overflow: ellipsis;\n                justify-content: center;\n                color: {{ @theme.colors("OS-BLACK", 50) }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n                transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n                -moz-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -webkit-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n            }\n\n            [part="label"]:has(+ [part="field"]:not(:placeholder-shown)),\n            [part="label"]:has(+ [part="field"]:focus) {\n                padding: 0;\n                color: {{ @theme.colors("OS-BLACK", 80) }};\n                font-size: {{  @theme.fonts.sizes("XSMALL") }};\n                line-height: {{  @theme.fonts.lines("XSMALL") }};\n            }\n        ($ endif $)\n\n        [part="field"] {\n            padding: 0;\n            width: 100%;\n            resize: none;\n            outline: none;\n            border: unset;\n            display: block;\n            background: transparent;\n            color: {{ @theme.colors("OS-BLACK") }};\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n            padding: {{ @truty(@props.label, [""]) ? "1rem 0 0 0" : ".5rem 0" }};\n        }\n    '], ctl: !0 })({ attrs: ["rows", "label", "disabled", "placeholder"], props: { rows: 1, label: "", value: "", disabled: !1, placeholder: "" }, rules: { focus() { this.emit("focus", { data: this.props.value }) }, blur() { this.emit("blur", { data: this.props.value }) }, change() { this.emit("change", { data: this.props.value }) }, input(e) { this.props.value = e.target.value, this.rules.scroll(), this.emit("input", { data: this.props.value }) }, keyup() { this.emit("keyup", { data: this.props.value }) }, keydown() { this.emit("keydown", { data: this.props.value }) }, keypress() { this.emit("keypress", { data: this.props.value }) }, scroll() { this.refs.field.scroll(0, 0), setTimeout((() => { this.refs.field.style.cssText = "height: auto", this.refs.field.style.cssText = "height: " + this.refs.field.scrollHeight + "px" }), 0) } }, setup: { created() { this.reset = function() { this.props.value = "", this.rules.scroll(), this.emit("reset") }, this.focus = function() { this.refs.field.focus() }, this.blur = function() { this.refs.field.blur() } }, mounted() { this.hasAttribute("value") && (this.props.value = this.getAttribute("value"), this.removeAttribute("value"), this.truty(this.props.value, [""]) && this.rules.scroll()), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, removed() { this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "rows":
                case "label":
                case "placeholder":
                    this.props[e] = n; break;
                case "disabled":
                    this.props.disabled = this.truty(n) }
            if ("props" === s) switch (this.setter(e, n, ["rows", "label", "disabled", "placeholder"]), e) {
                case "rows":
                case "label":
                case "disabled":
                case "placeholder":
                    this.emit("change:" + e, { data: n }); break;
                case "value":
                    this.refs.field.value = n, this.ctl.setFormValue(n || null) } } } }), OS.$Component.Filler = OS.$Component({ tag: OS.$Selectors.Filler, tpl: '\n        <slot name="start" />\n        <div ref="wrapper" part="wrapper">\n            ($ set uid = "uid_" + @random() $)\n            ($ if @truty(@props.label, [""]) $)\n                <label ref="label" part="label" for="{{ uid }}">{{> @props.label }}</label>\n            ($ endif $)\n            <input ref="field" part="field" id="{{ uid }}" \n                @keypress="{{ @rules.keypress }}" \n                @keydown="{{ @rules.keydown }}" \n                @change="{{ @rules.change }}" \n                @keyup="{{ @rules.keyup }}" \n                @input="{{ @rules.input }}" \n                @focus="{{ @rules.focus }}" \n                @blur="{{ @rules.blur }}" \n                type="search" \n                ($ if @truty(@props.placeholder, [""]) $)\n                    placeholder="{{ @props.placeholder }}"\n                ($ else $)\n                    placeholder=" "\n                ($ endif $)\n                ($ if @props.disabled $)\n                    disabled="{{ @props.disabled }}"\n                ($ endif $)\n            />\n        </div>\n        <svg ref="icon" part="icon" fill="currentColor" viewBox="0 0 48 48">\n            <path d="M19.25 38.6V34.05H28.9V38.6H19.25ZM11.1 26.55V22.05H37V26.55H11.1ZM5 14.55V10H43.15V14.55H5Z"/>\n        </svg>\n        <slot name="end" />\n        ($ if @state.show $)\n            <ul ref="content" part="content" @click:propagation="{{ () => {} }}">\n                ($ if Array.isArray(@props.results) $)\n                    ($ each result into @props.results $)\n                        <li ref="item" part="item" tabindex="0" @click:propagation="{{ (event) => @rules.select(event, result) }}" @keydown:propagation="{{ (event) => @rules.select(event, result) }}">\n                            {{ @rules.write(result, @props.setQuery) }}\n                        </li>\n                    ($ endeach $)\n                ($ endif $)\n            </ul>\n        ($ endif $)\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        @keyframes anime-off {\n            0% { transform: translateY(0px); opacity: 1; }\n            100% { transform: translateY(20px); opacity: 0; }\n        }\n\n        @keyframes anime-on {\n            0% { transform: translateY(20px); opacity: 0; }\n            100% { transform: translateY(0px); opacity: 1; }\n        }\n\n        ::-webkit-search-cancel-button,\n        ::-webkit-inner-spin-button,\n        ::-webkit-outer-spin-button {\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            display: none;\n        }\n        \n        input {\n            -webkit-appearance: textfield;\n            -moz-appearance: textfield;\n            appearance: textfield;\n        }      \n\n       ($ if @state.show $)\n            ::-webkit-scrollbar {\n                -webkit-appearance: none;\n                background: transparent;\n                -moz-appearance: none;\n                appearance: none;\n                height: 5px;\n                width: 5px;\n            }\n            \n            ::-webkit-scrollbar-track {\n                background: transparent;\n            }\n            \n            ::-webkit-scrollbar-thumb {\n                border-radius: 2px; \n                background: {{ @theme.colors("GRAY", 300) }};\n            }\n            \n            ::-webkit-scrollbar-thumb:hover {\n                background: {{ @theme.colors("GRAY", 400) }};\n            }\n        ($ endif $)\n\n        :host {\n            gap: .5rem;\n            width: 100%;\n            display: flex;\n            flex-wrap: wrap;\n            border-width: 1px;\n            position: relative;\n            align-items: center;\n            border-style: solid;\n            border-radius: .25rem;\n            padding: .35rem .75rem;\n            background: {{ @theme.colors("OS-LIGHT") }};\n            border-color: {{ @theme.colors("OS-SHADE") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus),\n            :host(:focus-within) {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        [part="wrapper"] {\n            flex: 1;\n            width: 0%;\n            display: flex;\n            position: relative;\n            flex-direction: column;\n        }\n\n        ($ if @truty(@props.label, [""]) $)\n            [part="label"] {\n                width: 100%;\n                display: flex;\n                overflow: hidden;\n                font-weight: 600;\n                inset: 0 0 auto 0;  \n                position: absolute; \n                padding: .5rem 0;\n                white-space: nowrap;\n                pointer-events: none;\n                flex-direction: column;\n                text-overflow: ellipsis;\n                justify-content: center;\n                color: {{ @theme.colors("OS-BLACK", 50) }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n                transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -moz-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -webkit-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n            }\n\n            [part="label"]:has(+ [part="field"]:not(:placeholder-shown)),\n            [part="label"]:has(+ [part="field"]:focus) {\n                padding: 0;\n                color: {{ @theme.colors("OS-BLACK", 80) }};\n                font-size: {{  @theme.fonts.sizes("XSMALL") }};\n                line-height: {{  @theme.fonts.lines("XSMALL") }};\n            }\n        ($ endif $)\n\n        [part="field"] {\n            padding: 0;\n            width: 100%;\n            outline: none;\n            border: unset;\n            display: block;\n            background: transparent;\n            color: {{ @theme.colors("OS-BLACK") }};\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n            padding: {{ @truty(@props.label, [""]) ? "1rem 0 0 0" : ".5rem 0" }};\n        }\n\n        [part="icon"] {\n            width: 1.2rem;\n            height: 1.2rem;\n            display: block;\n            pointer-events: none;\n            color: {{ @theme.colors("OS-BLACK") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus) [part="icon"],\n            :host(:focus-within) [part="icon"] {\n                color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        ($ if @state.show $)\n            [part="content"] {\n                margin: 0;\n                padding: 0;\n                width: 100%;\n                display: flex;\n                overflow: auto;\n                list-style: none;\n                max-height: 300px;\n                position: absolute;\n                border-radius: .25rem;\n                inset: auto 0 auto 0;\n                flex-direction: column;\n                ($ if !@state.expand $)\n                    pointer-events: none;\n                ($ endif $)\n                z-index: {{ @theme.layer() }};\n                background: {{ @theme.colors("OS-WHITE") }};\n                {{ @state.pos ? "bottom" : "top" }}: calc(100% + .25rem);\n                box-shadow: {{ @theme.colors("OS-BLACK", 20) }} 0px 2px 12px;\n                animation: anime-{{ @state.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            [part="item"] {\n                width: 100%;\n                outline: none;\n                display: block;\n                font-family: inherit;\n                padding: .25rem .5rem;\n                font-size: {{  @theme.fonts.sizes("MEDIUM") }};\n                line-height: {{  @theme.fonts.lines("MEDIUM") }};\n            }\n\n            [part="item"]:hover,\n            [part="item"]:focus,\n            [part="item"]:focus-within {\n                color: {{ @theme.colors("OS-BLACK") }};\n                background: {{ @theme.colors("OS-PRIME", 40) }};\n            }\n        ($ endif $)\n    '], ctl: !0 })({ attrs: ["set-query", "set-value", "label", "disabled", "placeholder"], props: { setQuery: null, setValue: null, label: "", query: "", value: "", results: [], disabled: !1, placeholder: "" }, state: { expand: !1, show: !1, pos: !1 }, rules: { write: (e, t) => t ? t.split(".").reduce(((e, t) => e[t]), e) : e, hide(e) {!this.root.contains(e.target) && e.target !== this && this.state.expand && (this.state.expand = !1) }, pos() { this.state.show && (this.state.pos = window.innerHeight - this.getBoundingClientRect().top < this.refs.content.clientHeight) }, focus() { this.emit("focus", { data: this.props.query }) }, blur() { this.emit("blur", { data: this.props.query }) }, change() { this.emit("change", { data: this.props.query }) }, input(e) { this.props.query = e.target.value, this.props.value = "", this.emit("input", { data: this.props.query }) }, keyup() { this.emit("keyup", { data: this.props.query }) }, keydown() { this.emit("keydown", { data: this.props.query }) }, keypress() { this.emit("keypress", { data: this.props.query }) }, select(e, t) { "click" !== e.type && 13 !== e.keyCode || this.emit("select", { data: t }, (function() { this.props.query = this.rules.write(t, this.props.setQuery), this.props.value = this.rules.write(t, this.props.setValue), this.state.expand = !1 })) } }, setup: { created() { this.reset = function() { this.state.expand = !1, this.props.value = "", this.props.query = "", this.emit("reset") }, this.focus = function() { this.refs.field.focus() }, this.blur = function() { this.refs.field.blur() } }, mounted() { this.hasAttribute("value") && (this.props.value = this.getAttribute("value"), this.removeAttribute("value")), this.hasAttribute("query") && (this.props.query = this.getAttribute("query"), this.removeAttribute("query")), window.addEventListener("click", this.rules.hide), window.addEventListener("scroll", this.rules.pos), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, removed() { window.removeEventListener("click", this.rules.hide), window.removeEventListener("scroll", this.rules.pos), this.ctl.form.removeEventListener("reset", this.reset.bind(this)) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "set-query":
                    this.props.setQuery = n; break;
                case "set-value":
                    this.props.setValue = n; break;
                case "label":
                case "placeholder":
                    this.props[e] = n; break;
                case "disabled":
                    this.props.disabled = this.truty(n) }
            if ("state" === s) switch (e) {
                case "show":
                    this.focus(), this.rules.pos(), this.emit("change:expand", { data: n }); break;
                case "expand":
                    n ? (this.state.show = n, this.rules.pos()) : setTimeout((() => { this.state.show = n }), 250) }
            if ("props" === s) switch (this.setter(e, n, ["setQuery", "setValue", "label", "disabled", "placeholder"]), e) {
                case "label":
                case "disabled":
                case "setQuery":
                case "setValue":
                    this.emit("change:" + e, { data: n }); break;
                case "query":
                    this.falsy(n, [""]) && (this.props.value = ""), this.refs.field.value = n, this.emit("change:" + e, { data: n }); break;
                case "value":
                    this.ctl.setFormValue(n || null); break;
                case "results":
                    this.state.expand = Array.isArray(n) && Boolean(n.length) } } } }), OS.$Component.Time = OS.$Component({ tag: OS.$Selectors.Time, tpl: '\n        <slot name="start" />\n        <div ref="wrapper" part="wrapper">\n            ($ set uid = "uid_" + @random() $)\n            ($ if @truty(@props.label, [""]) $)\n                <label ref="label" part="label" for="{{ uid }}">{{> @props.label }}</label>\n            ($ endif $)\n            <input ref="field" part="field" id="{{ uid }}" \n                value="{{> @props.value ? @rules.display(@props.value, @props.format) : \'\' }}"\n                ($ if @truty(@props.placeholder, [""]) $)\n                    placeholder="{{ @props.placeholder }}"\n                ($ else $)\n                    placeholder=" "\n                ($ endif $)\n                ($ if @props.disabled $)\n                    disabled="{{ @props.disabled }}"\n                ($ endif $)\n            />\n        </div>\n        <svg ref="icon" part="icon" fill="currentColor" viewBox="0 0 48 48">\n            <path d="M15.95 40.6H32.15V34.75C32.15 32.5167 31.3576 30.6 29.7728 29C28.188 27.4 26.2796 26.6 24.0478 26.6C21.8159 26.6 19.9083 27.4 18.325 29C16.7417 30.6 15.95 32.5167 15.95 34.75V40.6ZM7 45.15V40.6H11.4V34.7674C11.4 32.4649 12 30.3698 13.2 28.4819C14.4 26.594 16.0333 25.1333 18.1 24.1C16.0333 23.0667 14.4 21.6007 13.2 19.7022C12 17.8037 11.4 15.6972 11.4 13.3826V7.6H7V3H41.15V7.6H36.75V13.3826C36.75 15.6972 36.15 17.8037 34.95 19.7022C33.75 21.6007 32.1167 23.0667 30.05 24.1C32.1167 25.1333 33.75 26.594 34.95 28.4819C36.15 30.3698 36.75 32.4649 36.75 34.7674V40.6H41.15V45.15H7Z"/>\n        </svg>\n        <slot name="end" />\n        ($ if @state.show $)\n            <div ref="modal" part="modal">\n                <div ref="content" part="content" @click:propagation="{{ () => {} }}">\n                    ($ if @truty(@props.label, [""]) $)\n                        <label ref="clabel" part="clabel">{{> @props.label }}</label>\n                    ($ endif $)\n                    <div ref="items" part="items">\n                        <div ref="hours" part="hours">\n                            ($ each hour into @state.info.hours $)\n                                ($ set [text, time, attr] = hour $)\n                                <button ref="time" part="time" role="hour-button" type="button" @click="{{ @rules.change }}" @keydown:propagation="{{ () => {} }}" data-value="{{ time }}" {{> attr ? attr + \'="true"\' : "" }}>\n                                    {{ text }}\n                                </button>\n                            ($ endeach $)\n                        </div>\n                        <div ref="minutes" part="minutes">\n                            ($ each minute into @state.info.minutes $)\n                                ($ set [text, time, attr] = minute $)\n                                <button ref="time" part="time" role="minute-button" type="button" @click="{{ @rules.change }}" @keydown:propagation="{{ () => {} }}" data-value="{{ time }}" {{> attr ? attr + \'="true"\' : "" }}>\n                                    {{ text }}\n                                </button>\n                            ($ endeach $)\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ($ endif $)\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n        \n        @keyframes opacity-off {\n            0% { opacity: 1; }\n            100% { opacity: 0; }\n        }\n\n        @keyframes slide-off {\n            0% { transform: translateY(0px); }\n            100% { transform: translateY(20px); }\n        }\n\n        @keyframes opacity-on {\n            0% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n\n        @keyframes slide-on {\n            0% { transform: translateY(20px); }\n            100% { transform: translateY(0px); }\n        }\n\n        ($ if @state.show $)\n            ::-webkit-scrollbar {\n                -webkit-appearance: none;\n                background: transparent;\n                -moz-appearance: none;\n                appearance: none;\n                height: 5px;\n                width: 5px;\n            }\n            \n            ::-webkit-scrollbar-track {\n                background: transparent;\n            }\n            \n            ::-webkit-scrollbar-thumb {\n                border-radius: 2px; \n                background: {{ @theme.colors("GRAY", 300) }};\n            }\n            \n            ::-webkit-scrollbar-thumb:hover {\n                background: {{ @theme.colors("GRAY", 400) }};\n            }\n\n            ::-webkit-search-cancel-button,\n            ::-webkit-inner-spin-button,\n            ::-webkit-outer-spin-button {\n                -webkit-appearance: none;\n                -moz-appearance: none;\n                appearance: none;\n                display: none;\n            }\n            \n            input {\n                -webkit-appearance: textfield;\n                -moz-appearance: textfield;\n                appearance: textfield;\n            }     \n        ($ endif $) \n\n        :host {\n            gap: .5rem;\n            width: 100%;\n            display: flex;\n            flex-wrap: wrap;\n            border-width: 1px;\n            position: relative;\n            align-items: center;\n            border-style: solid;\n            border-radius: .25rem;\n            padding: .35rem .75rem;\n            background: {{ @theme.colors("OS-LIGHT") }};\n            border-color: {{ @theme.colors("OS-SHADE") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus),\n            :host(:focus-within) {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        [part="wrapper"] {\n            flex: 1;\n            width: 0%;\n            display: flex;\n            position: relative;\n            flex-direction: column;\n        }\n\n        ($ if @truty(@props.label, [""]) $)\n            [part="label"] {\n                width: 100%;\n                display: flex;\n                overflow: hidden;\n                font-weight: 600;\n                inset: 0 0 auto 0;  \n                position: absolute; \n                padding: .5rem 0;\n                white-space: nowrap;\n                pointer-events: none;\n                flex-direction: column;\n                text-overflow: ellipsis;\n                justify-content: center;\n                color: {{ @theme.colors("OS-BLACK", 50) }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n                transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -moz-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -webkit-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n            }\n\n            [part="label"]:has(+ [part="field"]:not(:placeholder-shown)),\n            [part="label"]:has(+ [part="field"]:focus) {\n                padding: 0;\n                color: {{ @theme.colors("OS-BLACK", 80) }};\n                font-size: {{  @theme.fonts.sizes("XSMALL") }};\n                line-height: {{  @theme.fonts.lines("XSMALL") }};\n            }\n        ($ endif $)\n\n        [part="field"] {\n            padding: 0;\n            width: 100%;\n            outline: none;\n            border: unset;\n            display: block;\n            background: transparent;\n            color: {{ @theme.colors("OS-BLACK") }};\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n            padding: {{ @truty(@props.label, [""]) ? "1rem 0 0 0" : ".5rem 0" }};\n        }\n\n        [part="icon"] {\n            width: 1.2rem;\n            height: 1.2rem;\n            display: block;\n            pointer-events: none;\n            color: {{ @theme.colors("OS-BLACK") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus) [part="icon"],\n            :host(:focus-within) [part="icon"] {\n                color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        ($ if @state.show $)\n            [part="modal"] {\n                inset: 0;\n                width: 100%;\n                display: flex;\n                height: 100dvh;\n                position: fixed;\n                align-items: end;\n                justify-content: center;\n                backdrop-filter: blur(5px);\n                ($ if !@props.expand $)\n                    pointer-events: none;\n                ($ endif $)\n                z-index: {{ @theme.layer() }};\n                background: {{ @theme.colors("OS-BLACK", 10) }};\n                animation: opacity-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            [part="content"] {\n                width: 100%;\n                outline: none;\n                display: flex;\n                overflow: hidden;\n                max-height: 60dvh; \n                border-radius: .25rem;\n                flex-direction: column;\n                background: {{ @theme.colors("OS-WHITE") }};\n                box-shadow: {{ @theme.colors("OS-BLACK", 20) }} 0px 2px 12px;\n                animation: slide-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            ($ if @truty(@props.label, [""]) $)\n                [part="clabel"] {\n                    width: 100%;\n                    display: block;\n                    padding: .65rem;\n                    font-weight: 700;\n                    text-align: center;\n                    border-bottom-width: 1px;\n                    border-bottom-style: solid;\n                    color: {{ @theme.colors("OS-BLACK") }};\n                    font-size: {{  @theme.fonts.sizes("SMALL") }};\n                    line-height: {{  @theme.fonts.lines("SMALL") }};\n                    border-bottom-color: {{ @theme.colors("OS-SHADE") }};\n                }\n            ($ endif $)\n\n            [part="hours"] {\n                border-inline-end-width: 1px;\n                border-inline-end-style: solid;\n                border-inline-end-color: {{ @theme.colors("OS-SHADE") }};\n            }\n            \n            [part="items"] {\n                width: 100%;\n                display: grid;\n                overflow: overlay;\n                align-items: flex-start;\n                grid-template-rows: 1fr;\n                grid-template-columns: repeat(2, 1fr);\n            }\n\n            [part="hours"],\n            [part="minutes"] {\n                gap: .25rem;\n                width: 100%;\n                height: 100%;\n                display: flex;\n                padding: .25rem;\n                overflow: overlay;\n                flex-direction: column;\n            }\n\n            [part="time"] {\n                width: 100%;\n                height: auto;\n                border: unset;\n                cursor: pointer;\n                padding: .25rem;\n                font-weight: 500;\n                text-align: center;\n                border-radius: 4px;\n                align-self: center;\n                justify-self: center;\n                pointer-events: auto;\n                background: transparent;\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n            }\n\n            [part="time"]:focus {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n\n            [today] {\n                color: {{ @theme.colors("OS-BLACK") }};\n                background: {{ @theme.colors("OS-PRIME", 40) }};\n            }\n\n            [selected] {\n                color: {{ @theme.colors("OS-WHITE") }};\n                background: {{ @theme.colors("OS-PRIME") }};\n            }\n\n            [disabled] {\n                color: transparent;\n                pointer-events: none;\n                background: {{ @theme.colors("OS-LIGHT") }};\n            }\n\n            @media (min-width: 1024px) {\n                [part="modal"] {\n                    position: absolute;\n                    height: max-content;\n                    inset: auto 0 auto 0;\n                    background: transparent;\n                    {{ @state.pos ? "bottom" : "top" }}: 0;\n                }\n        \n                [part="content"] {\n                    max-height: 300px;\n                }\n        \n                ($ if @truty(@props.label, [""]) $)\n                    [part="clabel"] {\n                        display: none;\n                    }\n                ($ endif $)\n            }\n        ($ endif $)\n    '], ctl: !0 })({ attrs: ["label", "format", "disabled", "placeholder", "disabled-hours", "disabled-minutes"], props: { label: "", value: "", format: "h:m", expand: !1, placeholder: "", disabled: !1, disabledHours: [], disabledMinutes: [] }, state: { show: !1, pos: !1, date: new Date, info: { hours: [], minutes: [] } }, rules: { init() { const e = this.props.value.split(":").filter(Boolean).map((e => +e)),
                t = new Date; for (var n = 0; n < 24; n++) this.state.info.hours[n] = [(n < 10 ? "0" : "") + String(n), n], this.props.disabledHours.includes(n) ? this.state.info.hours[n][2] = "disabled" : (t.getHours() === n && (this.state.info.hours[n][2] = "today"), n === e[0] && (this.state.info.hours[n][2] = "selected")); for (var s = 0; s < 60; s++) this.state.info.minutes[s] = [(s < 10 ? "0" : "") + String(s), s], this.props.disabledMinutes.includes(s) ? this.state.info.minutes[s][2] = "disabled" : (t.getMinutes() === s && (this.state.info.minutes[s][2] = "today"), s === e[1] && (this.state.info.minutes[s][2] = "selected")) }, format: e => ("0" + e.getHours()).slice(-2) + ":" + ("0" + e.getMinutes()).slice(-2), toggle(e) { this.props.disabled ? this.props.expand = !1 : "click" !== e.type && 13 !== e.keyCode || (this.props.expand = !this.props.expand) }, blur(e) {!this.root.contains(e.target) && e.target !== this && this.props.expand && this.rules.toggle({ type: "click" }) }, change(e) { const t = e.target.dataset.value;
            this.state.date["hour-button" === e.target.role ? "setHours" : "setMinutes"](t), this.props.value = this.rules.format(this.state.date) }, pos() { this.state.show && (this.state.pos = window.innerHeight - this.getBoundingClientRect().top < this.refs.modal.clientHeight) } }, setup: { created() { const e = { __: { zeros: function(e, t) { for (var n = e < 0 ? "-" : "", s = Math.abs(e).toString(); s.length < t;) s = "0" + s; return n + s }, clean: function(e) { var t = e.match(/^'([^]*?)'?$/); return t ? t[1].replace(/''/g, "'") : e } }, a: (e, t) => { var n = e.getHours() / 12 >= 1 ? "pm" : "am"; switch (t) {
                        case "a":
                        case "aa":
                            return n.toUpperCase();
                        case "aaa":
                            return n;
                        case "aaaaa":
                            return n[0];
                        default:
                            return "am" === n ? "a.m." : "p.m." } }, h: (t, n) => e.__.zeros(t.getHours() % 12 || 12, n.length), H: (t, n) => e.__.zeros(t.getHours(), n.length), m: (t, n) => e.__.zeros(t.getMinutes(), n.length), s: (t, n) => e.__.zeros(t.getSeconds(), n.length) };
            this.rules.display = (t, n) => { if ("string" != typeof t) return null; var s = (n = n || "h:m").match(/(\w)\1*|''|'(''|[^'])+('|$)|./g); return t = new Date("1990-10-10 " + t), s ? s.map((function(n) { if ("''" === n) return "'"; var s = n[0]; if ("'" === s) return e.__.clean(n); var i = e[s]; return i ? i(t, n) : n })).join("") : null }, this.reset = function() { this.props.value = "", this.state.date = new Date, this.rules.init(), this.emit("reset") }, this.focus = function() { this.refs.field.focus() }, this.blur = function() { this.refs.field.blur() } }, mounted() { if (this.hasAttribute("value")) { let e = this.getAttribute("value").split(":").filter(Boolean).map((e => +e));
                2 === e.length && (this.state.date.setHours(e[0]), this.state.date.setMinutes(e[1]), this.props.value = this.rules.format(this.state.date)), this.removeAttribute("value") }
            this.rules.init(), this.addEventListener("keydown", this.rules.toggle), window.addEventListener("click", this.rules.blur), window.addEventListener("scroll", this.rules.pos), this.addEventListener("click", this.rules.toggle), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, removed() { this.removeEventListener("keydown", this.rules.toggle), window.removeEventListener("click", this.rules.blur), window.removeEventListener("scroll", this.rules.pos), this.removeEventListener("click", this.rules.toggle), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "label":
                case "placeholder":
                    this.props[e] = n; break;
                case "format":
                    this.props.format = n || "h:m"; break;
                case "disabled":
                    this.props.disabled = this.truty(n); break;
                case "disabled-hours":
                    this.props.disabledHours = (n || "").split(",").map((e => e.trim())).filter((e => e.length)).map((e => +e)); break;
                case "disabled-minutes":
                    this.props.disabledMinutes = (n || "").split(",").map((e => e.trim())).filter((e => e.length)) }
            if ("state" === s && "show" === e) { if (this.focus(), this.rules.pos(), OS.$Wrapper && OS.$Wrapper.rules.toggle(), n) { const e = this.refs.items.querySelectorAll("[selected]");
                    e[0] && this.refs.hours.scroll(0, e[0].offsetTop - this.refs.hours.clientHeight / 2), e[1] && this.refs.minutes.scroll(0, e[1].offsetTop - this.refs.minutes.clientHeight / 2) }
                this.emit("change:expand", { data: n }) } if ("props" === s) switch (this.setter(e, n, ["label", "format", "disabled", "placeholder"]), e) {
                case "label":
                case "format":
                case "placeholder":
                case "disbledHours":
                case "disabledMinutes":
                    this.emit("change:" + e, { data: n }); break;
                case "value":
                    this.ctl.setFormValue(n || null), this.emit("change", { data: n }); break;
                case "expand":
                    n ? (this.state.show = n, this.rules.pos()) : setTimeout((() => { this.state.show = n }), 250); break;
                case "disabled":
                    n && (this.props.expand = !1), this.emit("change:disabled", { data: n }) }["date", "locales", "expand", "value", "disabledHours", "disabledMinutes"].includes(e) && (this.rules.init(), this.render()) } } }), OS.$Component.Date = OS.$Component({ tag: OS.$Selectors.Date, tpl: '\n        <slot name="start" />\n        <div ref="wrapper" part="wrapper">\n            ($ set uid = "uid_" + @random() $)\n            ($ if @truty(@props.label, [""]) $)\n                <label ref="label" part="label" for="{{ uid }}">{{> @props.label }}</label>\n            ($ endif $)\n            <input ref="field" part="field" id="{{ uid }}" \n                value="{{> @props.value ? @rules.display(@props.value, @props.format) : \'\' }}"\n                ($ if @truty(@props.placeholder, [""]) $)\n                    placeholder="{{ @props.placeholder }}"\n                ($ else $)\n                    placeholder=" "\n                ($ endif $)\n                ($ if @props.disabled $)\n                    disabled="{{ @props.disabled }}"\n                ($ endif $)\n            />\n        </div>\n        <svg ref="icon" part="icon" fill="currentColor" viewBox="0 0 48 48">\n            <path d="M9.49995 45.0996C8.26078 45.0996 7.19265 44.6394 6.29555 43.719C5.39848 42.7986 4.94995 41.7421 4.94995 40.5496V10.4996C4.94995 9.24668 5.39848 8.16678 6.29555 7.25991C7.19265 6.35304 8.26078 5.89961 9.49995 5.89961H12.45V4.79961C12.45 4.28711 12.6546 3.83398 13.0638 3.44021C13.473 3.04648 13.933 2.84961 14.4438 2.84961C15.0154 2.84961 15.4843 3.04648 15.8506 3.44021C16.2168 3.83398 16.4 4.28711 16.4 4.79961V5.89961H31.6V4.79961C31.6 4.28711 31.7929 3.83398 32.1788 3.44021C32.5647 3.04648 33.028 2.84961 33.5688 2.84961C34.1237 2.84961 34.5927 3.04648 34.9756 3.44021C35.3585 3.83398 35.55 4.28711 35.55 4.79961V5.89961H38.5C39.7529 5.89961 40.8328 6.35304 41.7397 7.25991C42.6465 8.16678 43.1 9.24668 43.1 10.4996V40.5496C43.1 41.7421 42.6465 42.7986 41.7397 43.719C40.8328 44.6394 39.7529 45.0996 38.5 45.0996H9.49995ZM9.49995 40.5496H38.5V19.5996H9.49995V40.5496ZM24.0202 28.2496C23.3928 28.2496 22.8575 28.03 22.4145 27.5908C21.9715 27.1515 21.75 26.6232 21.75 26.0058C21.75 25.3883 21.9729 24.8579 22.4189 24.4146C22.8649 23.9713 23.4015 23.7496 24.0289 23.7496C24.6563 23.7496 25.1833 23.9692 25.61 24.4085C26.0366 24.8477 26.25 25.376 26.25 25.9935C26.25 26.6109 26.0352 27.1413 25.6056 27.5846C25.176 28.0279 24.6475 28.2496 24.0202 28.2496ZM16.0061 28.2496C15.3887 28.2496 14.8583 28.03 14.415 27.5908C13.9716 27.1515 13.75 26.6232 13.75 26.0058C13.75 25.3883 13.9696 24.8579 14.4088 24.4146C14.848 23.9713 15.3764 23.7496 15.9938 23.7496C16.6112 23.7496 17.1416 23.9692 17.585 24.4085C18.0283 24.8477 18.25 25.376 18.25 25.9935C18.25 26.6109 18.0303 27.1413 17.5911 27.5846C17.1519 28.0279 16.6235 28.2496 16.0061 28.2496ZM31.971 28.2496C31.3903 28.2496 30.875 28.03 30.425 27.5908C29.975 27.1515 29.75 26.6232 29.75 26.0058C29.75 25.3883 29.9764 24.8579 30.4294 24.4146C30.8823 23.9713 31.4074 23.7496 32.0048 23.7496C32.6022 23.7496 33.1257 23.9692 33.5754 24.4085C34.0251 24.8477 34.25 25.376 34.25 25.9935C34.25 26.6109 34.027 27.1413 33.581 27.5846C33.135 28.0279 32.5984 28.2496 31.971 28.2496ZM24.0202 36.2496C23.3928 36.2496 22.8575 36.0231 22.4145 35.5702C21.9715 35.1173 21.75 34.5922 21.75 33.9948C21.75 33.3974 21.9729 32.8739 22.4189 32.4242C22.8649 31.9745 23.4015 31.7496 24.0289 31.7496C24.6563 31.7496 25.1833 31.9726 25.61 32.4186C26.0366 32.8645 26.25 33.4012 26.25 34.0286C26.25 34.6093 26.0352 35.1246 25.6056 35.5746C25.176 36.0246 24.6475 36.2496 24.0202 36.2496ZM16.0061 36.2496C15.3887 36.2496 14.8583 36.0231 14.415 35.5702C13.9716 35.1173 13.75 34.5922 13.75 33.9948C13.75 33.3974 13.9696 32.8739 14.4088 32.4242C14.848 31.9745 15.3764 31.7496 15.9938 31.7496C16.6112 31.7496 17.1416 31.9726 17.585 32.4186C18.0283 32.8645 18.25 33.4012 18.25 34.0286C18.25 34.6093 18.0303 35.1246 17.5911 35.5746C17.1519 36.0246 16.6235 36.2496 16.0061 36.2496ZM31.971 36.2496C31.3903 36.2496 30.875 36.0231 30.425 35.5702C29.975 35.1173 29.75 34.5922 29.75 33.9948C29.75 33.3974 29.9764 32.8739 30.4294 32.4242C30.8823 31.9745 31.4074 31.7496 32.0048 31.7496C32.6022 31.7496 33.1257 31.9726 33.5754 32.4186C34.0251 32.8645 34.25 33.4012 34.25 34.0286C34.25 34.6093 34.027 35.1246 33.581 35.5746C33.135 36.0246 32.5984 36.2496 31.971 36.2496Z" />\n        </svg>\n        <slot name="end" />\n        ($ if @state.show $)\n            <div ref="modal" part="modal">\n                <div ref="content" part="content" @click:propagation="{{ () => {} }}">\n                    ($ if @truty(@props.label, [""]) $)\n                        <label ref="clabel" part="clabel">{{> @props.label }}</label>\n                    ($ endif $)\n                    ($ if !["Y", "M"].includes(@state.view) $)\n                        <ul ref="control" part="control">\n                            <button ref="trigger_prev" part="trigger" role="trigger" type="button" @click="{{ @rules.prev }}" @keydown:propagation="{{ () => {} }}">\n                                <svg ref="icon_prev" part="cicon" fill="currentColor" viewBox="0 0 48 48">\n                                    ($ if @props.locale === "ar" $) \n                                        <path d="M27 24.45L13.15 10.55C12.3833 9.81667 12 8.91667 12 7.85C12 6.78333 12.3667 5.86667 13.1 5.1C13.8667 4.36667 14.7917 4 15.875 4C16.9583 4 17.8667 4.36667 18.6 5.1L33.2 19.65C33.8667 20.3167 34.3583 21.0583 34.675 21.875C34.9917 22.6917 35.15 23.55 35.15 24.45C35.15 25.3167 34.9917 26.1583 34.675 26.975C34.3583 27.7917 33.8667 28.55 33.2 29.25L18.6 43.8C17.8667 44.5333 16.9667 44.8917 15.9 44.875C14.8333 44.8583 13.9167 44.4833 13.15 43.75C12.4167 43.0167 12.05 42.1083 12.05 41.025C12.05 39.9417 12.4167 39.0333 13.15 38.3L27 24.45Z" />\n                                    ($ else $)    \n                                        <path d="M20.15 24.426L34 38.326C34.7667 39.0593 35.15 39.9593 35.15 41.026C35.15 42.0926 34.7834 43.0093 34.05 43.776C33.2834 44.5093 32.3584 44.876 31.275 44.876C30.1917 44.876 29.2834 44.5093 28.55 43.776L13.95 29.226C13.2834 28.5593 12.7917 27.8176 12.475 27.001C12.1584 26.1843 12 25.326 12 24.426C12 23.5593 12.1584 22.7176 12.475 21.901C12.7917 21.0843 13.2834 20.326 13.95 19.626L28.55 5.07598C29.2834 4.34264 30.1834 3.98431 31.25 4.00098C32.3167 4.01764 33.2334 4.39264 34 5.12598C34.7334 5.85931 35.1 6.76764 35.1 7.85098C35.1 8.93431 34.7334 9.84264 34 10.576L20.15 24.426Z" />\n                                    ($ endif $)\n                                </svg>\n                            </button>\n                            <li ref="display" part="display">\n                                <button ref="month" part="month" role="trigger" \n                                    @keydown:propagation="{{ () => {} }}"\n                                    type="button" data-next="M" \n                                    @click="{{ @rules.view }}" \n                                >\n                                    {{ @rules.slice(@state.locales[@props.locale].Months[@state.info.month], @props.fullMonth) }}\n                                </button>\n                                <button ref="year" part="year" role="trigger" \n                                    @keydown:propagation="{{ () => {} }}"\n                                    type="button" data-next="Y" \n                                    @click="{{ @rules.view }}" \n                                >\n                                    {{ @state.info.year }}\n                                </button>\n                            </li>\n                            <button ref="trigger_next" part="trigger" role="trigger" type="button" @click="{{ @rules.next }}" @keydown:propagation="{{ () => {} }}">\n                                <svg ref="icon_next" part="cicon" fill="currentColor" viewBox="0 0 48 48">\n                                    ($ if @props.locale === "ar" $)    \n                                        <path d="M20.15 24.426L34 38.326C34.7667 39.0593 35.15 39.9593 35.15 41.026C35.15 42.0926 34.7834 43.0093 34.05 43.776C33.2834 44.5093 32.3584 44.876 31.275 44.876C30.1917 44.876 29.2834 44.5093 28.55 43.776L13.95 29.226C13.2834 28.5593 12.7917 27.8176 12.475 27.001C12.1584 26.1843 12 25.326 12 24.426C12 23.5593 12.1584 22.7176 12.475 21.901C12.7917 21.0843 13.2834 20.326 13.95 19.626L28.55 5.07598C29.2834 4.34264 30.1834 3.98431 31.25 4.00098C32.3167 4.01764 33.2334 4.39264 34 5.12598C34.7334 5.85931 35.1 6.76764 35.1 7.85098C35.1 8.93431 34.7334 9.84264 34 10.576L20.15 24.426Z" />\n                                    ($ else $)\n                                        <path d="M27 24.45L13.15 10.55C12.3833 9.81667 12 8.91667 12 7.85C12 6.78333 12.3667 5.86667 13.1 5.1C13.8667 4.36667 14.7917 4 15.875 4C16.9583 4 17.8667 4.36667 18.6 5.1L33.2 19.65C33.8667 20.3167 34.3583 21.0583 34.675 21.875C34.9917 22.6917 35.15 23.55 35.15 24.45C35.15 25.3167 34.9917 26.1583 34.675 26.975C34.3583 27.7917 33.8667 28.55 33.2 29.25L18.6 43.8C17.8667 44.5333 16.9667 44.8917 15.9 44.875C14.8333 44.8583 13.9167 44.4833 13.15 43.75C12.4167 43.0167 12.05 42.1083 12.05 41.025C12.05 39.9417 12.4167 39.0333 13.15 38.3L27 24.45Z" />\n                                    ($ endif $)\n                                </svg>\n                            </button>\n                            ($ range day into 0 to 6 $)\n                                <li ref="day" part="day">{{ @rules.slice(@state.locales[@props.locale].Days[day], @props.fullDay) }}</li>\n                            ($ endrange $)\n                        </ul>\n                    ($ endif $)\n                    <div ref="items" part="items">\n                        ($ if ["Y", "M"].includes(@state.view) $)\n                            ($ set range = @state.view === "Y" ? @props.yearRange : [0, 11] $)\n                            ($ range value into range[0] to range[1] $)\n                                <button ref="date" part="date" role="{{ @state.view === \'Y\' ? \'year\' : \'month\' }}-button" type="button" \n                                    data-next="D" \n                                    data-value="{{ value }}" \n                                    data-action="{{ @state.view }}" \n                                    @click="{{ @rules.view }}" \n                                    @keydown:propagation="{{ () => {} }}"\n                                    ($ if @state.date.getMonth() === value || @state.info.year === value $)\n                                        selected="true"\n                                    ($ endif $)\n                                >\n                                    {{ @state.view === "Y" ? value : @state.locales[@props.locale].Months[value] }}\n                                </button>\n                            ($ endrange $)\n                        ($ else $)\n                            ($ each day into @state.info.array $)\n                                ($ set [text, date, attr] = day $)\n                                <button ref="date" part="date" role="date-button" type="button" @click="{{ @rules.change }}" @keydown:propagation="{{ () => {} }}" data-date="{{ date }}" {{> attr ? attr + \'="true"\' : "" }}>\n                                    {{ text }}\n                                </button>\n                            ($ endeach $)\n                        ($ endif $)\n                    </div>\n                </div>\n            </div>\n        ($ endif $)\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n        \n        @keyframes opacity-off {\n            0% { opacity: 1; }\n            100% { opacity: 0; }\n        }\n\n        @keyframes slide-off {\n            0% { transform: translateY(0px); }\n            100% { transform: translateY(20px); }\n        }\n\n        @keyframes opacity-on {\n            0% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n\n        @keyframes slide-on {\n            0% { transform: translateY(20px); }\n            100% { transform: translateY(0px); }\n        }\n\n        ($ if @state.show $)\n            ::-webkit-scrollbar {\n                -webkit-appearance: none;\n                background: transparent;\n                -moz-appearance: none;\n                appearance: none;\n                height: 5px;\n                width: 5px;\n            }\n            \n            ::-webkit-scrollbar-track {\n                background: transparent;\n            }\n            \n            ::-webkit-scrollbar-thumb {\n                border-radius: 2px; \n                background: {{ @theme.colors("GRAY", 300) }};\n            }\n            \n            ::-webkit-scrollbar-thumb:hover {\n                background: {{ @theme.colors("GRAY", 400) }};\n            }\n\n            ::-webkit-search-cancel-button,\n            ::-webkit-inner-spin-button,\n            ::-webkit-outer-spin-button {\n                -webkit-appearance: none;\n                -moz-appearance: none;\n                appearance: none;\n                display: none;\n            }\n            \n            input {\n                -webkit-appearance: textfield;\n                -moz-appearance: textfield;\n                appearance: textfield;\n            }     \n        ($ endif $) \n\n        :host {\n            gap: .5rem;\n            width: 100%;\n            display: flex;\n            flex-wrap: wrap;\n            border-width: 1px;\n            position: relative;\n            align-items: center;\n            border-style: solid;\n            border-radius: .25rem;\n            padding: .35rem .75rem;\n            background: {{ @theme.colors("OS-LIGHT") }};\n            border-color: {{ @theme.colors("OS-SHADE") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus),\n            :host(:focus-within) {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        [part="wrapper"] {\n            flex: 1;\n            width: 0%;\n            display: flex;\n            position: relative;\n            flex-direction: column;\n        }\n\n        ($ if @truty(@props.label, [""]) $)\n            [part="label"] {\n                width: 100%;\n                display: flex;\n                overflow: hidden;\n                font-weight: 600;\n                inset: 0 0 auto 0;  \n                position: absolute; \n                padding: .5rem 0;\n                white-space: nowrap;\n                pointer-events: none;\n                flex-direction: column;\n                text-overflow: ellipsis;\n                justify-content: center;\n                color: {{ @theme.colors("OS-BLACK", 50) }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n                transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -moz-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -webkit-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n            }\n\n            [part="label"]:has(+ [part="field"]:not(:placeholder-shown)),\n            [part="label"]:has(+ [part="field"]:focus) {\n                padding: 0;\n                color: {{ @theme.colors("OS-BLACK", 80) }};\n                font-size: {{  @theme.fonts.sizes("XSMALL") }};\n                line-height: {{  @theme.fonts.lines("XSMALL") }};\n            }\n        ($ endif $)\n\n        [part="field"] {\n            padding: 0;\n            width: 100%;\n            outline: none;\n            border: unset;\n            display: block;\n            background: transparent;\n            color: {{ @theme.colors("OS-BLACK") }};\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n            padding: {{ @truty(@props.label, [""]) ? "1rem 0 0 0" : ".5rem 0" }};\n        }\n\n        [part="icon"] {\n            width: 1.2rem;\n            height: 1.2rem;\n            display: block;\n            pointer-events: none;\n            color: {{ @theme.colors("OS-BLACK") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus) [part="icon"],\n            :host(:focus-within) [part="icon"] {\n                color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        ($ if @state.show $)\n            [part="modal"] {\n                inset: 0;\n                width: 100%;\n                display: flex;\n                height: 100dvh;\n                position: fixed;\n                align-items: end;\n                justify-content: center;\n                backdrop-filter: blur(5px);\n                ($ if !@props.expand $)\n                    pointer-events: none;\n                ($ endif $)\n                z-index: {{ @theme.layer() }};\n                background: {{ @theme.colors("OS-BLACK", 10) }};\n                animation: opacity-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            [part="content"] {\n                width: 100%;\n                outline: none;\n                display: flex;\n                overflow: hidden;\n                max-height: 90dvh; \n                border-radius: .25rem;\n                flex-direction: column;\n                background: {{ @theme.colors("OS-WHITE") }};\n                box-shadow: {{ @theme.colors("OS-BLACK", 20) }} 0px 2px 12px;\n                animation: slide-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            ($ if @truty(@props.label, [""]) $)\n                [part="clabel"] {\n                    width: 100%;\n                    display: block;\n                    padding: .65rem;\n                    font-weight: 700;\n                    text-align: center;\n                    border-bottom-width: 1px;\n                    border-bottom-style: solid;\n                    color: {{ @theme.colors("OS-BLACK") }};\n                    font-size: {{  @theme.fonts.sizes("SMALL") }};\n                    line-height: {{  @theme.fonts.lines("SMALL") }};\n                    border-bottom-color: {{ @theme.colors("OS-SHADE") }};\n                }\n            ($ endif $)\n\n            [part="control"] {\n                margin: 0;\n                width: 100%;\n                display: grid;\n                padding: .5rem;\n                row-gap: 0.5rem;\n                list-style: none;\n                column-gap: 0.25rem;\n                align-items: center;\n                grid-template-rows: 1fr;\n                border-bottom-width: 1px;\n                border-bottom-style: solid;\n                grid-template-columns: repeat(7, 1fr);\n                background: {{ @theme.colors("OS-PRIME") }};\n                border-bottom-color: {{ @theme.colors("OS-SHADE") }};\n            }\n\n            [part="trigger"], \n            [part="date"] {\n                width: 100%;\n                height: 100%;\n                border: unset;\n                cursor: pointer;\n                padding: .25rem;\n                border-radius: 4px;\n                align-self: center;\n                justify-self: center;\n                pointer-events: auto;\n                background: transparent;\n            }\n\n            [part="trigger"]:focus, \n            [part="date"]:focus,\n            [part="month"]:focus,\n            [part="year"]:focus {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n\n            [part="cicon"] {\n                width: 1.2rem;\n                height: 1.2rem;\n                pointer-events: none;\n            }\n\n            [part="display"] {\n                gap: .25rem;\n                width: 100%;\n                display: flex;\n                justify-content: center;\n                grid-column: span 5 / span 5;\n            }\n\n            [part="month"], \n            [part="year"] {\n                border: unset;\n                font-weight: 600;\n                padding: 0 .25rem;\n                background: transparent;\n                text-transform: capitalize;\n                font-size: {{  @theme.fonts.sizes("MEDIUM") }};\n                line-height: {{  @theme.fonts.lines("MEDIUM") }};\n            }\n            \n            [part="day"] {\n                width: 100%;\n                font-weight: 600;\n                text-align: center;\n                text-transform: uppercase;\n                font-size: {{ @theme.fonts.sizes("XSMALL") }};\n                line-height: {{ @theme.fonts.lines("XSMALL") }};\n            }\n\n            [part="trigger"],\n            [part="month"], \n            [part="year"],\n            [part="day"] {\n                color: {{ @theme.colors("OS-WHITE") }};\n            }\n\n            [part="items"] {\n                gap: .25rem;\n                width: 100%;\n                display: grid;\n                padding: .25rem;\n                overflow: overlay;\n                grid-template-rows: 1fr;\n                ($ if @state.view === "Y" $)\n                    grid-template-columns: repeat(4, 1fr);\n                ($ elif @state.view === "M" $)\n                    grid-template-columns: repeat(3, 1fr);\n                ($ else $)\n                    grid-template-columns: repeat(7, 1fr);\n                ($ endif $)\n            }\n\n            [part="date"] {\n                width: 100%;\n                height: auto;\n                padding: .25rem;\n                font-weight: 500;\n                text-align: center;\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n            }\n\n            [today] {\n                color: {{ @theme.colors("OS-BLACK") }};\n                background: {{ @theme.colors("OS-PRIME", 40) }};\n            }\n\n            [selected] {\n                color: {{ @theme.colors("OS-WHITE") }};\n                background: {{ @theme.colors("OS-PRIME") }};\n            }\n\n            [disabled] {\n                color: transparent;\n                pointer-events: none;\n                background: {{ @theme.colors("OS-LIGHT") }};\n            }\n\n            @media (min-width: 1024px) {\n                [part="modal"] {\n                    position: absolute;\n                    height: max-content;\n                    inset: auto 0 auto 0;\n                    background: transparent;\n                    {{ @state.pos ? "bottom" : "top" }}: 0;\n                }\n        \n                [part="content"] {\n                    max-height: 300px;\n                }\n        \n                ($ if @truty(@props.label, [""]) $)\n                    [part="clabel"] {\n                        display: none;\n                    }\n                ($ endif $)\n\n                [part="control"] {\n                    padding: .5rem .25rem;\n                }\n            }\n        ($ endif $)\n    '], ctl: !0 })({ attrs: ["locale", "label", "format", "disabled", "placeholder", "full-day", "full-month", "year-range", "disabled-days", "disabled-dates"], props: { format: "yyyy-mm-dd", label: "", value: "", placeholder: "", expand: !1, disabled: !1, fullDay: !0, fullMonth: !0, yearRange: [1950, 2150], disabledDates: [], disabledDays: [], locale: document.documentElement.lang }, state: { locales: OS.$Locales, show: !1, pos: !1, view: "D", date: new Date, info: { array: [], month: 0, year: 0 } }, rules: { init() { const e = this.state.date;
            e.setDate(1); var t = new Date(e.getFullYear(), e.getMonth() + 1, 0).getDate(),
                n = e.getDay(),
                s = 7 - new Date(e.getFullYear(), e.getMonth() + 1, 0).getDay() - 1; const i = { month: e.getMonth(), year: e.getFullYear(), array: [] }; for (var r = n; r > 0; r--) i.array.push(["00", "00-00-0000", "disabled"]); const o = new Date; for (r = 1; r <= t; r++) { const e = new Date(this.state.date);
                e.setDate(r); const t = ["" + (r < 10 ? "0" + r : r), this.rules.format(e)];
                this.props.disabledDates.includes(this.rules.format(e)) || this.props.disabledDays.map((e => e)).includes(e.getDay() + 1) ? t[2] = "disabled" : (r === o.getDate() && this.state.date.getMonth() === o.getMonth() && this.state.date.getFullYear() === o.getFullYear() && (t[2] = "today"), this.props.value === this.rules.format(e) && (t[2] = "selected")), i.array.push(t) } for (r = 1; r <= s; r++) i.array.push(["00", "00-00-0000", "disabled"]);
            this.state.info = i }, format: e => e.getFullYear() + "-" + ("0" + (e.getMonth() + 1)).slice(-2) + "-" + ("0" + e.getDate()).slice(-2), slice: (e, t) => /\d/.test(t) ? e.substring(0, t) : e, toggle(e) { this.props.disabled ? this.props.expand = !1 : "click" !== e.type && 13 !== e.keyCode || (this.props.expand = !this.props.expand) }, blur(e) {!this.root.contains(e.target) && e.target !== this && this.props.expand && this.rules.toggle({ type: "click" }) }, change(e) { const t = e.target.dataset.date.split("-");
            this.state.date.setMonth(Number(t[1]) - 1), this.state.date.setFullYear(Number(t[0])), this.state.date.setDate(Number(t[2])), this.props.value = e.target.dataset.date, this.props.expand = !1, this.rules.init() }, prev() { const e = this.state.date.getFullYear();
            this.state.date.setMonth(this.state.date.getMonth() - 1), this.emit((e !== this.state.date.getFullYear() ? "year" : "month") + ":change"), this.rules.init() }, next() { const e = this.state.date.getFullYear();
            this.state.date.setMonth(this.state.date.getMonth() + 1), this.emit((e !== this.state.date.getFullYear() ? "year" : "month") + ":change"), this.rules.init() }, view({ target: { dataset: e } }) { if (e) { "Y" === e.action && (this.state.date.setFullYear(+e.value), this.emit("year:change")), "M" === e.action && (this.state.date.setMonth(+e.value), this.emit("month:change")), this.state.view = e.next, this.rules.init(); const t = this.refs.items.querySelector("[selected]");
                t && this.refs.items.scroll(0, t.offsetTop - this.refs.items.clientHeight / 2) } }, pos() { this.state.show && (this.state.pos = window.innerHeight - this.getBoundingClientRect().top < this.refs.modal.clientHeight) } }, setup: { created() { const e = { __: { zeros: function(e, t) { for (var n = e < 0 ? "-" : "", s = Math.abs(e).toString(); s.length < t;) s = "0" + s; return n + s }, clean: function(e) { var t = e.match(/^'([^]*?)'?$/); return t ? t[1].replace(/''/g, "'") : e } }, y: (t, n) => { var s = t.getFullYear(),
                        i = s > 0 ? s : 1 - s; return e.__.zeros("yy" === n ? i % 100 : i, n.length) }, m: (t, n) => { var s = t.getMonth(); switch (n) {
                        case "mmm":
                            return this.state.locales[this.props.locale].Months[s].slice(0, 3);
                        case "mmmm":
                            return this.state.locales[this.props.locale].Months[s];
                        default:
                            return e.__.zeros(s + 1, n.length) } }, d: (t, n) => { switch (n) {
                        case "ddd":
                            return this.state.locales[this.props.locale].Days[t.getDay()].slice(0, 3);
                        case "dddd":
                            return this.state.locales[this.props.locale].Days[t.getDay()];
                        default:
                            return e.__.zeros(t.getDate(), n.length) } } };
            this.rules.display = (t, n) => { if ("string" != typeof t) return null; var s = (n = n || "yyyy-mm-dd").match(/(\w)\1*|''|'(''|[^'])+('|$)|./g); return t = new Date(t), s ? s.map((function(n) { if ("''" === n) return "'"; var s = n[0]; if ("'" === s) return e.__.clean(n); var i = e[s]; return i ? i(t, n) : n })).join("") : null }, this.reset = function() { this.props.value = "", this.state.date = new Date, this.rules.init(), this.emit("reset") }, this.focus = function() { this.refs.field.focus() }, this.blur = function() { this.refs.field.blur() } }, mounted() { if (this.hasAttribute("value")) { let e = this.getAttribute("value"); const t = /#now\s*([+-]?\s*\d+)*/,
                    n = new Date,
                    s = e.match(t); if (s) { const t = parseInt(s[1]);
                    e = new Date(n.setDate(n.getDate() + (t || 0))) } const i = new Date(e);
                isNaN(i) || "Invalid Date" === i.toString() || (this.state.date.setFullYear(i.getFullYear()), this.state.date.setMonth(i.getMonth()), this.state.date.setDate(i.getDate()), this.props.value = this.rules.format(i)), this.removeAttribute("value") }
            this.rules.init(), this.addEventListener("keydown", this.rules.toggle), window.addEventListener("click", this.rules.blur), window.addEventListener("scroll", this.rules.pos), this.addEventListener("click", this.rules.toggle), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, removed() { this.removeEventListener("keydown", this.rules.toggle), window.removeEventListener("click", this.rules.blur), window.removeEventListener("scroll", this.rules.pos), this.removeEventListener("click", this.rules.toggle), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "label":
                case "locale":
                case "placeholder":
                    this.props[e] = n; break;
                case "format":
                    this.props.format = n || "yyyy-mm-dd"; break;
                case "disabled":
                    this.props.disabled = this.truty(n); break;
                case "full-day":
                    this.props.fullDay = n || !0; break;
                case "full-month":
                    this.props.fullMonth = n || !0; break;
                case "year-range":
                    var i = (n || "").split(",").map((e => e.trim())).filter((e => !Number.isNaN(+e) && +e));
                    this.props.yearRange = 2 === i.length ? i : [1950, 2150]; break;
                case "disabled-days":
                    this.props.disabledDays = (n || "").split(",").map((e => e.trim())).filter((e => e.length)).map((e => +e)); break;
                case "disabled-dates":
                    this.props.disabledDates = (n || "").split(",").map((e => e.trim())).filter((e => e.length)) }
            if ("state" === s && "show" === e && (this.focus(), this.rules.pos(), OS.$Wrapper && OS.$Wrapper.rules.toggle(), this.state.view = "D", this.emit("change:expand", { data: n })), "props" === s) switch (this.setter(e, n, ["locale", "label", "format", "disabled", "placeholder"]), e) {
                case "locale":
                case "label":
                case "format":
                case "fullDay":
                case "fullMonth":
                case "yearRange":
                case "placeholder":
                case "disabledDays":
                case "disabledDates":
                    this.emit("change:" + e, { data: n }); break;
                case "value":
                    this.ctl.setFormValue(n || null), this.emit("change", { data: n }); break;
                case "expand":
                    n ? (this.state.show = n, this.rules.pos()) : setTimeout((() => { this.state.show = n }), 250); break;
                case "disabled":
                    n && (this.props.expand = !1), this.emit("change:disabled", { data: n }) }["date", "locales", "value", "yearRange", "disabledDates", "disabledDays"].includes(e) && this.rules.init() } } }), OS.$Component.Group = OS.$Component({ tag: OS.$Selectors.Group, tpl: '\n        ($ if @truty(@props.label, [""]) $)\n            <label ref="label" part="label">{{> @props.label }}</label>\n        ($ endif $)\n        <slot />\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        ::slotted(*) {\n            padding-inline-start: 1rem; \n        }\n\n        ($ if @truty(@props.label, [""]) $)\n            [part="label"] {\n                width: 100%;\n                display: block;\n                font-weight: 600;\n                padding: .25rem .5rem;\n                color: {{ @theme.colors("OS-BLACK") }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n            }\n        ($ endif $)\n    '] })({ attrs: ["label"], props: { label: "" }, rules: { init() {
            [...this.querySelectorAll(":scope > :not(" + OS.$Selectors.Option + ")")].map((e => e.remove())) } }, setup: { mounted() { this.addEventListener("DOMSubtreeModified", this.rules.init) }, removed() { this.removeEventListener("DOMSubtreeModified", this.rules.init) }, updated(e, t, n, s) { "attrs" === s && "label" === e && (this.props.label = n), "props" === s && (this.setter(e, n, ["label"]), "label" === e) && this.emit("change:" + e, { data: n }) } } }), OS.$Component.Option = OS.$Component({ tag: OS.$Selectors.Option, tpl: "\n        <slot />\n    ", css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        ($ if @props.hidden $)\n            :host {\n                display: none;\n            }\n        ($ else $)\n            :host {\n                width: 100%;\n                outline: none;\n                display: block;\n                font-family: inherit;\n                padding: .25rem .5rem;\n                font-size: {{  @theme.fonts.sizes("MEDIUM") }};\n                line-height: {{  @theme.fonts.lines("MEDIUM") }};\n                ($ if @props.selected $)\n                    color: {{ @theme.colors("OS-WHITE") }};\n                    background: {{ @theme.colors("OS-PRIME") }};\n                ($ endif $)\n                ($ if @props.disabled $)\n                    pointer-events: none;\n                    color: {{ @theme.colors("OS-BLACK") }};\n                    background: {{ @theme.colors("OS-BLACK", 40) }};\n                ($ endif $)\n            }\n\n            ($ if !@props.disabled $)\n                :host(:hover),\n                :host(:focus),\n                :host(:focus-within) {\n                    color: {{ @theme.colors("OS-BLACK") }};\n                    background: {{ @theme.colors("OS-PRIME", 40) }};\n                }\n            ($ endif $)\n        ($ endif $)\n\n        ::slotted(*) {\n            pointer-events: none;\n        }\n    '] })({ attrs: ["text", "value", "hidden", "selected", "disabled", "tabindex"], props: { text: "", value: "", hidden: !1, selected: !1, disabled: !1 }, rules: { toggle(e) { this.props.disabled || this.props.hidden || "click" !== e.type && 13 !== e.keyCode || (13 === e.keyCode && e.stopPropagation(), this.closest(OS.$Selectors.Select) && this.closest(OS.$Selectors.Select).multiple ? this.props.selected = !this.props.selected : this.props.selected = !0) }, change() { if (!this.closest(OS.$Selectors.Select)) return; const e = this.closest(OS.$Selectors.Select); if (e.multiple) { var t = e.value || [],
                    n = e.text || []; if (this.props.selected) t.push(this.props.value), n.push(this.props.text || this.innerText);
                else { const e = t.indexOf(this.props.value);
                    t.splice(e, 1) && n.splice(e, 1), !t.length && (t = [], n = []) } if (t.length) { e.value = t, e.text = n; const s = new FormData;
                    e.value.forEach((t => { s.append(e.name, t) })), e.ctl.setFormValue(s) } else e.value = "", e.text = "", e.ctl.setFormValue(null) } else this.props.selected && e.querySelectorAll(OS.$Selectors.Option).forEach((e => { e !== this && (e.selected = !1) })), e.ctl.setFormValue(this.props.value), e.text = this.props.text || this.innerText, e.value = this.props.value, e.expand = !1 } }, setup: { mounted() { this.tabIndex = this.props.disabled || this.props.hidden ? -1 : 0, this.addEventListener("click", this.rules.toggle), this.addEventListener("keydown", this.rules.toggle) }, removed() { this.removeEventListener("click", this.rules.toggle), this.removeEventListener("keydown", this.rules.toggle) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "text":
                case "value":
                    this.props[e] = n; break;
                case "hidden":
                case "selected":
                case "disabled":
                    this.props[e] = this.truty(n); break;
                case "tabindex":
                    const t = this.props.disabled || this.props.hidden ? -1 : 0;
                    this.tabIndex !== t && (this.tabIndex = t) }
            if ("props" === s) switch (this.setter(e, n, ["text", "value", "hidden", "selected", "disabled"]), e) {
                case "text":
                case "value":
                    this.emit("change:" + e, { data: n }); break;
                case "hidden":
                case "disabled":
                    this.tabIndex = -1, this.emit("change:" + e, { data: n }); break;
                case "selected":
                    this.rules.change() } } } }), OS.$Component.Select = OS.$Component({ tag: OS.$Selectors.Select, tpl: '\n        <slot name="start" />\n        <div ref="wrapper" part="wrapper">\n            ($ if @truty(@props.label, [""]) $)\n                <label ref="label" part="label">{{> @props.label }}</label>\n            ($ endif $)\n            <ul ref="field" part="field"\n                ($ if !@props.disabled $)\n                    tabindex="0"\n                ($ endif $)\n            >\n                ($ if @props.text $)\n                    ($ if Array.isArray(@props.text) $)\n                        ($ each text into @props.text $)\n                            <li ref="text" part="text">{{> text }}</li>\n                        ($ endeach $)\n                    ($ else $)\n                        <li ref="text" part="text">{{> @props.text }}</li>\n                    ($ endif $)\n                ($ endif $)\n            </ul>\n        </div>\n        <svg ref="icon" part="icon" fill="currentColor" viewBox="0 0 48 48">\n            <path d="M23.6629 27.4121L37.5629 13.5621C38.2962 12.7954 39.1962 12.4121 40.2629 12.4121C41.3296 12.4121 42.2462 12.7788 43.0129 13.5121C43.7462 14.2788 44.1129 15.2038 44.1129 16.2871C44.1129 17.3704 43.7462 18.2788 43.0129 19.0121L28.4629 33.6121C27.7962 34.2788 27.0546 34.7704 26.2379 35.0871C25.4212 35.4038 24.5629 35.5621 23.6629 35.5621C22.7962 35.5621 21.9546 35.4038 21.1379 35.0871C20.3212 34.7704 19.5629 34.2788 18.8629 33.6121L4.31291 19.0121C3.57958 18.2788 3.22125 17.3788 3.23791 16.3121C3.25458 15.2454 3.62958 14.3288 4.36291 13.5621C5.09625 12.8288 6.00458 12.4621 7.08791 12.4621C8.17125 12.4621 9.07958 12.8288 9.81291 13.5621L23.6629 27.4121Z" />\n        </svg>\n        <slot name="end" />\n        ($ if @state.show $)\n            <div ref="modal" part="modal">\n                <div ref="content" part="content" @click:propagation="{{ () => {} }}">\n                    ($ if @truty(@props.label, [""]) $)\n                        <label ref="clabel" part="clabel">{{> @props.label }}</label>\n                    ($ endif $)\n                    ($ if @props.search $)\n                        <div ref="tools" part="tools">\n                            <input type="search" ref="search" part="search" @input="{{ @rules.search }}" placeholder="{{ @state.locales[@props.locale].Search }}" />\n                        </div>\n                    ($ endif $)\n                    <div ref="items" part="items">\n                        <slot />                   \n                    </div>\n                </div>\n            </div>\n        ($ endif $)\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n        \n        @keyframes opacity-off {\n            0% { opacity: 1; }\n            100% { opacity: 0; }\n        }\n\n        @keyframes slide-off {\n            0% { transform: translateY(0px); }\n            100% { transform: translateY(20px); }\n        }\n\n        @keyframes opacity-on {\n            0% { opacity: 0; }\n            100% { opacity: 1; }\n        }\n\n        @keyframes slide-on {\n            0% { transform: translateY(20px); }\n            100% { transform: translateY(0px); }\n        }\n\n        ($ if @state.show $)\n            ::-webkit-scrollbar {\n                -webkit-appearance: none;\n                background: transparent;\n                -moz-appearance: none;\n                appearance: none;\n                height: 5px;\n                width: 5px;\n            }\n            \n            ::-webkit-scrollbar-track {\n                background: transparent;\n            }\n            \n            ::-webkit-scrollbar-thumb {\n                border-radius: 2px; \n                background: {{ @theme.colors("GRAY", 300) }};\n            }\n            \n            ::-webkit-scrollbar-thumb:hover {\n                background: {{ @theme.colors("GRAY", 400) }};\n            }\n\n            ::-webkit-search-cancel-button,\n            ::-webkit-inner-spin-button,\n            ::-webkit-outer-spin-button {\n                -webkit-appearance: none;\n                -moz-appearance: none;\n                appearance: none;\n                display: none;\n            }\n            \n            input {\n                -webkit-appearance: textfield;\n                -moz-appearance: textfield;\n                appearance: textfield;\n            }      \n        ($ endif $)\n\n        :host {\n            gap: .5rem;\n            width: 100%;\n            display: flex;\n            flex-wrap: wrap;\n            border-width: 1px;\n            position: relative;\n            align-items: center;\n            border-style: solid;\n            border-radius: .25rem;\n            padding: .35rem .75rem;\n            background: {{ @theme.colors("OS-LIGHT") }};\n            border-color: {{ @theme.colors("OS-SHADE") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus),\n            :host(:focus-within) {\n                outline-width: 1px;\n                outline-style: auto;\n                outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        [part="wrapper"] {\n            flex: 1;\n            width: 0%;\n            display: flex;\n            position: relative;\n            flex-direction: column;\n        }\n\n        ($ if @truty(@props.label, [""]) $)\n            [part="label"] {\n                width: 100%;\n                display: flex;\n                padding: .5rem 0;\n                overflow: hidden;\n                font-weight: 600;\n                inset: 0 0 auto 0;  \n                position: absolute; \n                white-space: nowrap;\n                pointer-events: none;\n                flex-direction: column;\n                text-overflow: ellipsis;\n                justify-content: center;\n                color: {{ @theme.colors("OS-BLACK", 50) }};\n                font-size: {{  @theme.fonts.sizes("BASE") }};\n                line-height: {{  @theme.fonts.lines("BASE") }};\n                transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n                -moz-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height; \n                -webkit-transition: 200ms ease-in-out padding, 200ms ease-in-out color, 200ms ease-in-out font-size, 200ms ease-in-out line-height;\n            }\n\n            ($ if @props.text $)\n                [part="label"] {\n                    padding: 0;\n                    color: {{ @theme.colors("OS-BLACK", 80) }};\n                    font-size: {{  @theme.fonts.sizes("XSMALL") }};\n                    line-height: {{  @theme.fonts.lines("XSMALL") }};\n                }\n            ($ endif $)\n        ($ endif $)\n\n        [part="field"] {\n            margin: 0;\n            padding: 0;\n            width: 100%;\n            gap: .25rem;\n            outline: none;\n            border: unset;\n            display: flex;\n            height: 2.5rem;\n            list-style: none;\n            overflow: overlay;\n            background: transparent;\n            ($ if !@props.text || @props.disabled $)\n                cursor: default;\n            ($ endif $)\n            color: {{ @theme.colors("OS-BLACK") }};\n            font-size: {{  @theme.fonts.sizes("BASE") }};\n            line-height: {{  @theme.fonts.lines("BASE") }};\n            padding: {{ @truty(@props.label, [""]) ? "1rem 0 0 0" : ".5rem 0" }};\n        }\n\n        [part="field"]::-webkit-scrollbar {\n            display: none;\n        }\n\n        ($ if @props.multiple $)\n            [part="text"] {\n                height: 100%;\n                display: flex;\n                flex-shrink: 0;\n                padding: 0 .5rem;\n                font-weight: 600;\n                width: max-content;\n                align-items: center; \n                border-radius: .2rem;\n                color: {{ @theme.colors("OS-WHITE") }};\n                background: {{ @theme.colors("OS-PRIME", 400) }};\n                font-size: {{  @theme.fonts.sizes("XSMALL") }};\n                line-height: {{  @theme.fonts.lines("XSMALL") }};\n            }\n        ($ else $)\n            [part="text"] {\n                flex-shrink: 0;\n            }\n        ($ endif $)\n\n        [part="icon"] {\n            width: 1.2rem;\n            height: 1.2rem;\n            display: block;\n            pointer-events: none;\n            color: {{ @theme.colors("OS-BLACK") }};\n        }\n\n        ($ if !@props.disabled $)\n            :host(:focus) [part="icon"],\n            :host(:focus-within) [part="icon"] {\n                color: {{ @theme.colors("OS-PRIME", 400) }};\n            }\n        ($ endif $)\n\n        ($ if @state.show $)\n            [part="modal"] {\n                inset: 0;\n                width: 100%;\n                display: flex;\n                height: 100dvh;\n                position: fixed;\n                align-items: end;\n                justify-content: center;\n                backdrop-filter: blur(5px);\n                ($ if !@props.expand $)\n                    pointer-events: none;\n                ($ endif $)\n                z-index: {{ @theme.layer() }};\n                background: {{ @theme.colors("OS-BLACK", 10) }};\n                animation: opacity-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            [part="content"] {\n                width: 100%;\n                outline: none;\n                display: flex;\n                overflow: hidden;\n                max-height: 90dvh; \n                border-radius: .25rem;\n                flex-direction: column;\n                background: {{ @theme.colors("OS-WHITE") }};\n                box-shadow: {{ @theme.colors("OS-BLACK", 20) }} 0px 2px 12px;\n                animation: slide-{{ @props.expand ? "on" : "off" }} 200ms ease-in-out forwards;\n            }\n\n            ($ if @truty(@props.label, [""]) $)\n                [part="clabel"] {\n                    width: 100%;\n                    display: block;\n                    padding: .65rem;\n                    font-weight: 600;\n                    text-align: center;\n                    border-bottom-width: 1px;\n                    border-bottom-style: solid;\n                    color: {{ @theme.colors("OS-BLACK") }};\n                    font-size: {{  @theme.fonts.sizes("SMALL") }};\n                    line-height: {{  @theme.fonts.lines("SMALL") }};\n                    border-bottom-color: {{ @theme.colors("OS-SHADE") }};\n                }\n            ($ endif $)\n\n            ($ if @props.search $)\n                [part="tools"] {\n                    padding: .5rem;\n                    text-align: center;\n                    border-bottom-width: 1px;\n                    border-bottom-style: solid;\n                    border-bottom-color: {{ @theme.colors("OS-SHADE") }};\n                }\n\n                [part="search"] {\n                    width: 100%;\n                    display: block;\n                    border-width: 1px;\n                    border-style: solid;\n                    padding: .5rem 1rem;\n                    border-radius: .25rem;\n                    color: {{ @theme.colors("OS-BLACK") }};\n                    background: {{ @theme.colors("OS-LIGHT") }};\n                    border-color: {{ @theme.colors("OS-SHADE") }};\n                    font-size: {{  @theme.fonts.sizes("BASE") }};\n                    line-height: {{  @theme.fonts.lines("BASE") }};\n                }\n        \n                [part="search"]:focus,\n                [part="search"]:focus-within {\n                    outline-width: 1px;\n                    outline-style: auto;\n                    outline-color: {{ @theme.colors("OS-PRIME", 400) }};\n                }\n            ($ endif $)\n\n            [part="items"] {\n                flex: 1;\n                width: 100%;\n                display: flex;\n                overflow: overlay;\n                flex-direction: column; \n            }\n\n            @media (min-width: 1024px) {\n                [part="modal"] {\n                    position: absolute;\n                    height: max-content;\n                    inset: auto 0 auto 0;\n                    background: transparent;\n                    {{ @state.pos ? "bottom" : "top" }}: 0;\n                }\n\n                [part="content"] {\n                    max-height: 300px;\n                }\n\n                ($ if @truty(@props.label, [""]) $)\n                    [part="clabel"] {\n                        display: none;\n                    }\n                ($ endif $)\n            }\n        ($ endif $)\n    '], ctl: !0 })({ attrs: ["locale", "label", "search", "multiple", "disabled"], props: { text: "", value: "", label: "", expand: !1, search: !1, multiple: !1, disabled: !1, locale: document.documentElement.lang }, state: { locales: OS.$Locales, show: !1, pos: !1 }, rules: { init() {
            [...this.querySelectorAll(":scope > :not(" + OS.$Selectors.Group + ", " + OS.$Selectors.Option + ", [slot=start], [slot=end])")].map((e => e.remove())), this.render() }, toggle(e) { this.props.disabled && (this.props.expand = !1), "click" !== e.type && 13 !== e.keyCode || (this.props.expand = !this.props.expand) }, blur(e) {!this.root.contains(e.target) && e.target !== this && this.props.expand && this.rules.toggle(e) }, search(e) { const t = e.target.value.toUpperCase().trim().split(" ");
            this.emit("search", { data: t }, (() => {
                [...this.querySelectorAll(OS.$Selectors.Option)].map((e => { const n = e.innerText.toUpperCase().trim(),
                        s = e.value.toUpperCase().trim(),
                        i = e.text.toUpperCase().trim(),
                        r = []; for (const e of t) n.includes(e) || i.includes(e) || s.includes(e) ? r.push(1) : r.push(0);
                    r.includes(1) ? e.style.display = "" : e.style.display = "none" })) })) }, pos() { this.state.show && (this.state.pos = window.innerHeight - this.getBoundingClientRect().top < this.refs.modal.clientHeight) } }, setup: { created() { this.reset = function() { this.querySelectorAll(OS.$Selectors.Option).forEach((e => { e.selected = !1 })), this.ctl.setFormValue(null), this.props.value = "", this.props.text = "", this.emit("reset") }, this.focus = function() { this.refs.field.focus() }, this.blur = function() { this.refs.field.blur() } }, mounted() { this.addEventListener("DOMSubtreeModified", this.rules.init), this.addEventListener("keydown", this.rules.toggle), window.addEventListener("click", this.rules.blur), window.addEventListener("scroll", this.rules.pos), this.addEventListener("click", this.rules.toggle), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, removed() { this.removeEventListener("DOMSubtreeModified", this.rules.init), this.removeEventListener("keydown", this.rules.toggle), window.removeEventListener("click", this.rules.blur), window.removeEventListener("scroll", this.rules.pos), this.removeEventListener("click", this.rules.toggle), this.ctl.form.addEventListener("reset", this.reset.bind(this)) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "locale":
                case "label":
                    this.props[e] = n; break;
                case "search":
                case "multiple":
                case "disabled":
                    this.props[e] = this.truty(n) }
            if ("state" === s && "show" === e && (this.focus(), this.rules.pos(), OS.$Wrapper && OS.$Wrapper.rules.toggle(), this.emit("change:expand", { data: n })), "props" === s) switch (this.setter(e, n, ["locale", "label", "search", "multiple", "disabled"]), e) {
                case "locale":
                case "label":
                case "search":
                    this.emit("change:" + e, { data: n }); break;
                case "value":
                    this.emit("change", { data: n }); break;
                case "expand":
                    n ? (this.state.show = n, this.rules.pos(), this.querySelectorAll(OS.$Selectors.Option).forEach((e => e.style.display = "")), this.refs.items.scroll(0, 0)) : setTimeout((() => { this.state.show = n }), 250); break;
                case "disabled":
                    n && (this.props.expand = !1), this.emit("change:disabled", { data: n }); break;
                case "multiple":
                    this.emit("change:multiple", { data: n }), this.reset() } } } }), OS.$Component.Button = OS.$Component({ tag: OS.$Selectors.Button, tpl: '\n        <slot name="start" />\n        <slot />\n        <slot name="end" />\n    ', css: ['\n        * {\n            box-sizing: border-box;\n            font-family: inherit;\n        }\n\n        :host {\n            outline: none;\n            padding: .5rem;\n            cursor: default;\n            flex-wrap: wrap;\n            font-weight: 600;\n            border-width: 1px;\n            align-items: center;\n            border-style: solid;\n            display: inline-flex;\n            border-radius: .25rem;\n            justify-content: center;\n            ($ if @props.vertical $)\n                flex-direction: column; \n            ($ else $)\n                gap: .5rem;\n            ($ endif $)\n            ($ if @props.outlined $) \n                color: {{ @theme.colors("OS-PRIME") }};\n            ($ else $)\n                color: {{ @theme.colors("OS-WHITE") }};\n                background: {{ @theme.colors("OS-PRIME") }};\n            ($ endif $)\n            border-color: {{ @theme.colors("OS-PRIME") }};\n            font-size: {{  @theme.fonts.sizes("MEDIUM") }};\n            transition: 150ms ease-in-out color, 150ms ease-in-out border-color, 150ms ease-in-out backgroun;\n            -moz-transition: 150ms ease-in-out color, 150ms ease-in-out border-color, 150ms ease-in-out backgroun;\n            -webkit-transition: 150ms ease-in-out color, 150ms ease-in-out border-color, 150ms ease-in-out backgroun;\n        }\n\n        ($ if !@props.disabled $)\n            :host(:hover),\n            :host(:focus),\n            :host(:focus-within) {\n                color: {{ @theme.colors("OS-BLACK") }};\n                border-color: {{ @theme.colors("OS-PRIME", 40) }};\n                background: {{ @theme.colors("OS-PRIME", 40) }};\n            }\n        ($ endif $)\n\n        ::slotted(*) {\n            pointer-events: none;\n        }\n    '], ctl: !0 })({ attrs: ["type", "outlined", "vertical", "disabled"], props: { type: "submit", vertical: !1, disabled: !1, outlined: !1 }, rules: { click(e) { if (!this.props.disabled && ("click" === e.type || 13 === e.keyCode) && this.ctl.form) switch (this.props.type) {
                case "submit":
                    this.ctl.form.requestSubmit(); break;
                case "reset":
                    this.ctl.form.reset() } }, keydown(e) { 13 === e.keyCode && this.click() } }, setup: { mounted() { this.tabIndex = 0, this.addEventListener("click", this.rules.click), this.addEventListener("keydown", this.rules.keydown) }, removed() { this.removeEventListener("click", this.rules.click), this.removeEventListener("keydown", this.rules.keydown) }, updated(e, t, n, s) { if ("attrs" === s) switch (e) {
                case "type":
                    this.props.type = n; break;
                case "outlined":
                case "vertical":
                case "disabled":
                    this.props[e] = this.truty(n) }
            if ("props" === s) switch (this.setter(e, n, ["type", "vertical", "outlined", "disabled"]), e) {
                case "type":
                case "vertical":
                case "outlined":
                    this.emit("change:" + e, { data: n }); break;
                case "disabled":
                    this.tabIndex = n ? -1 : 0, this.emit("change:" + e, { data: n }) } } } }), OS.$Component.Wrapper.define() && OS.$Component.Toaster.define() && OS.$Component.Toast.define() && OS.$Component.Sidebar.define() && OS.$Component.Topbar.define() && OS.$Component.Modal.define() && OS.$Component.Dropdown.define() && OS.$Component.Datatable.define() && OS.$Component.Filter.define() && OS.$Component.Switch.define() && OS.$Component.Text.define() && OS.$Component.Password.define() && OS.$Component.Area.define() && OS.$Component.Date.define() && OS.$Component.Time.define() && OS.$Component.Select.define() && OS.$Component.Group.define() && OS.$Component.Option.define() && OS.$Component.Filler.define() && OS.$Component.Button.define();